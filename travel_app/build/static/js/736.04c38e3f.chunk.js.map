{"version":3,"file":"static/js/736.04c38e3f.chunk.js","mappings":"yNAOe,SAASA,IACpB,IAAAC,GAAyCC,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAUH,EAAVG,WAAYC,EAAgBJ,EAAhBI,iBACpBC,GAA4BJ,EAAAA,EAAAA,YAAWK,EAAAA,GAA/BC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SACTC,GAAWC,EAAAA,EAAAA,MAaXC,EAAU,CACZ,CACIC,MAAO,UACPC,UAAW,MACXC,IAAK,OAET,CACIF,MAAO,qBACPC,UAAW,QACXC,IAAK,QACLC,OAAQ,SAACC,EAAMC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAAOF,EAAOG,UAAUC,eAC3BH,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAAOF,EAAOK,kBACf,GAGd,CACIV,MAAO,mBACPC,UAAW,MACXC,IAAK,MACLC,OAAQ,SAACC,EAAMC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAAOF,EAAOM,QAAQF,eACzBH,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAAOF,EAAOO,gBACf,GAGd,CACIZ,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACC,EAAMC,GAAM,OACjBQ,EAAAA,EAAAA,KAAA,OAAAN,SAAMO,EAAeT,EAAOU,WAAgB,GAGpD,CACIf,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAMC,GAAM,OACjBQ,EAAAA,EAAAA,KAAA,UAAQG,QAAS,kBAnDFC,EAmD0BZ,EAAOY,KAlDxDzB,EAAiByB,QACjBpB,EAAS,QAFa,IAACoB,CAmDsC,EAACV,SAAC,kBAAuB,IAKpFO,EAAiB,SAACC,GACpB,IAAMG,EAAQC,KAAKC,MAAML,EAAW,MAC9BM,EAAUF,KAAKC,MAAOL,EAAW,KAAQ,IACzCO,EAAUH,KAAKI,MAAMR,EAAW,IACtC,MAAM,GAANS,OAAUN,EAAMT,WAAWgB,SAAS,EAAG,KAAI,KAAAD,OAAIH,EAAQZ,WAAWgB,SAAS,EAAG,KAAI,KAAAD,OAAIF,EAAQb,WAAWgB,SAAS,EAAG,KACzH,EAGMC,EAAOnC,EAAWoC,KAAI,SAACV,EAAMW,GAAK,MAAM,CAC1C1B,IAAK0B,EAAQ,EACbX,KAAMA,EAAKA,KACXT,UAAWS,EAAKT,UAChBG,QAASM,EAAKN,QACdI,SAAUE,EAAKF,SACfL,aAAcO,EAAKP,aACnBE,WAAYK,EAAKL,WACpB,IAED,OACIN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIM,EAAAA,EAAAA,KAAA,MAAAN,SAAI,iBAGJM,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAC9B,QAASA,EAAS+B,WAAYJ,KAGrCb,EAAAA,EAAAA,KAAA,SAAAN,SAAO,mBACPD,EAAAA,EAAAA,MAAA,UAAQyB,MAAOpC,EAAOqC,SA9EJ,SAACC,GACvB,IAAMC,EAAWD,EAAEE,OAAOJ,MAC1BnC,EAASsC,EACb,EA2E0D3B,SAAA,EAC9CM,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,UAASxB,SAAC,aACxBM,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,aAAYxB,SAAC,cAM3C,C","sources":["views/Settings.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Table, Modal } from 'antd';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function Settings() {\r\n    const { savedPaths, setDisplayedPath } = useContext(SavedPathsContext);\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleDisplayPath = (path) => {\r\n        setDisplayedPath(path);\r\n        navigate('/map');\r\n    };\r\n\r\n    const handleThemeChange = (e) => {\r\n        const newTheme = e.target.value;\r\n        setTheme(newTheme);\r\n    };\r\n\r\n    // Define the columns for the table\r\n    const columns = [\r\n        {\r\n            title: 'Path ID',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n        },\r\n        {\r\n            title: 'Start place & time',\r\n            dataIndex: 'start',\r\n            key: 'start',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <p>开始时间: {record.startTime.toString()}</p>\r\n                    <p>开始地点: {record.startAddress}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'End place & time',\r\n            dataIndex: 'end',\r\n            key: 'end',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <p>结束时间: {record.endTime.toString()}</p>\r\n                    <p>结束地点: {record.endAddress}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'duration',\r\n            key: 'duration',\r\n            render: (text, record) => (\r\n                <div>{formatDuration(record.duration)}</div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <button onClick={() => handleDisplayPath(record.path)}>Display on map</button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const formatDuration = (duration) => {\r\n        const hours = Math.floor(duration / 3600);\r\n        const minutes = Math.floor((duration % 3600) / 60);\r\n        const seconds = Math.round(duration % 60);\r\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    // Define the data for the table\r\n    const data = savedPaths.map((path, index) => ({\r\n        key: index + 1,\r\n        path: path.path,\r\n        startTime: path.startTime,\r\n        endTime: path.endTime,\r\n        duration: path.duration,\r\n        startAddress: path.startAddress,\r\n        endAddress: path.endAddress,\r\n    }));\r\n\r\n    return (\r\n        <div>\r\n            <h2>Saved Paths</h2>\r\n\r\n            {/* Add the table here */}\r\n            <Table columns={columns} dataSource={data} />\r\n\r\n\r\n            <label>Select Theme:</label>\r\n            <select value={theme} onChange={handleThemeChange}>\r\n                <option value=\"default\">Default</option>\r\n                <option value=\"Night Mode\">Dark</option>\r\n\r\n                {/* 添加其他主题选项 */}\r\n            </select>\r\n        </div>\r\n    );\r\n}"],"names":["Settings","_useContext","useContext","SavedPathsContext","savedPaths","setDisplayedPath","_useContext2","ThemeContext","theme","setTheme","navigate","useNavigate","columns","title","dataIndex","key","render","text","record","_jsxs","children","startTime","toString","startAddress","endTime","endAddress","_jsx","formatDuration","duration","onClick","path","hours","Math","floor","minutes","seconds","round","concat","padStart","data","map","index","Table","dataSource","value","onChange","e","newTheme","target"],"sourceRoot":""}