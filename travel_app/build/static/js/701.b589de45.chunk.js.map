{"version":3,"file":"static/js/701.b589de45.chunk.js","mappings":"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","sources":["views/Settings.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Table, Modal, Button, Card, Row, Col, message } from 'antd';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport defaultImage from '../picture/Default.png'\r\nimport nightImage from '../picture/Night.png'\r\n\r\nexport default function Settings() {\r\n    const { savedPaths, setDisplayedPath, deletePath } = useContext(SavedPathsContext);\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n    const navigate = useNavigate();\r\n    const { Meta } = Card;\r\n\r\n    const handleDisplayPath = (path) => {\r\n        setDisplayedPath(path);\r\n        navigate('/map');\r\n    };\r\n\r\n    const handleDeletePath = (pathId) => {\r\n        Modal.confirm({\r\n            centered: true,\r\n            title: 'Confirm Deletion',\r\n            content: 'Are you sure you want to delete this path?',\r\n            onOk: () => {\r\n                deletePath(pathId);\r\n                console.log(`Delete button clicked for path with ID ${pathId}`);\r\n                console.log(`Current number of saved paths is ${savedPaths.length}`);\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleThemeChange = (newTheme) => {\r\n        setTheme(newTheme);\r\n        message.success('Theme switched successfully!');\r\n    };\r\n\r\n    // Define the columns for the table\r\n    const columns = [\r\n        {\r\n            title: 'Path ID',\r\n            dataIndex: 'key',\r\n            key: 'key',\r\n        },\r\n        {\r\n            title: 'Start place & time',\r\n            dataIndex: 'start',\r\n            key: 'start',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <p>Time: {record.startTime.toString()}</p>\r\n                    <p>Place: {record.startAddress}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'End place & time',\r\n            dataIndex: 'end',\r\n            key: 'end',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <p>Time: {record.endTime.toString()}</p>\r\n                    <p>Place: {record.endAddress}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'duration',\r\n            key: 'duration',\r\n            render: (text, record) => (\r\n                <div>{formatDuration(record.duration)}</div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <div>\r\n                    <Button onClick={() => handleDisplayPath(record.path)}>Display on map</Button>\r\n                    <Button onClick={() => handleDeletePath(record.key)}>Delete</Button>\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const formatDuration = (duration) => {\r\n        const hours = Math.floor(duration / 3600);\r\n        const minutes = Math.floor((duration % 3600) / 60);\r\n        const seconds = Math.round(duration % 60);\r\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    // Define the data for the table\r\n    const data = savedPaths.map((path, index) => ({\r\n        key: index + 1,\r\n        path: path.path,\r\n        startTime: path.startTime,\r\n        endTime: path.endTime,\r\n        duration: path.duration,\r\n        startAddress: path.startAddress,\r\n        endAddress: path.endAddress,\r\n    }));\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Card title=\"Saved Paths\">\r\n                    \r\n                    {/* Add the table here */}\r\n                    <Table columns={columns} dataSource={data} />\r\n                </Card>\r\n            </div>\r\n\r\n            <div>\r\n                <Card title=\"Select Theme\">\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ flex: 1 }}\r\n                                cover={<img src={defaultImage} alt=\"Default Mode\" />}\r\n                                onClick={() => handleThemeChange('default')}\r\n                            >\r\n                                <Meta title=\"Default Mode\" />\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ flex: 1 }}\r\n                                cover={<img src={nightImage} alt=\"Night Mode\" />}\r\n                                onClick={() => handleThemeChange('dark')}\r\n                            >\r\n                                <Meta title=\"Night Mode\" />\r\n                            </Card>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["Settings","_useContext","useContext","SavedPathsContext","savedPaths","setDisplayedPath","deletePath","_useContext2","ThemeContext","setTheme","theme","navigate","useNavigate","Meta","Card","handleThemeChange","newTheme","message","success","columns","title","dataIndex","key","render","text","record","_jsxs","children","startTime","toString","startAddress","endTime","endAddress","_jsx","formatDuration","duration","Button","onClick","path","pathId","Modal","confirm","centered","content","onOk","console","log","concat","length","hours","Math","floor","minutes","seconds","round","padStart","data","map","index","Table","dataSource","Row","gutter","Col","span","hoverable","style","flex","cover","src","defaultImage","alt","nightImage"],"sourceRoot":""}