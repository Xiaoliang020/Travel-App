{"version":3,"file":"static/js/103.bce7de01.chunk.js","mappings":"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","sources":["views/Register.js"],"sourcesContent":["import {\n    Button,\n    Checkbox,\n    Form,\n    Input,\n    Select,\n    message,\n} from 'antd';\nimport React, { startTransition } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport default function Register() {\n    const [form] = Form.useForm();\n    const navigate = useNavigate();\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n        // Make an HTTP POST request to the backend\n        axios.post('/api/register', values)\n        .then((response) => {\n            // Check the response code\n            if (response.data.code === '0') {\n                // Registration successful\n                console.log('Registration successful!', response.data);\n                message.success('Registration success! Log in now!');\n                startTransition(() => {\n                    navigate('/login');\n                });\n            } else if (response.data.code === '-1') {\n                // Registration failed due to user already existing\n                console.error('Registration failed:', response.data.msg);\n                if (response.data.msg === 'The email already exists') {\n                    message.error('This email has been registered. Please choose a different email.');\n                } else if (response.data.msg === 'The username already exists') {\n                    message.error('Username already exists. Please choose a different username.');\n                }\n            }\n        })\n        .catch((error) => {\n            // Handle network or other errors\n            console.error('Registration failed:', error);\n            message.error('Registration failed. Please try again later.');\n        });\n    };\n\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            className=\"register-form\"\n            onFinish={onFinish}\n            scrollToFirstError\n        >\n            <h3 className='register_title'>\n                Account Sign Up\n            </h3>\n            <Form.Item\n                name=\"email\"\n                label=\"E-mail\"\n                rules={[\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                    {\n                        required: true,\n                        message: 'Please input your E-mail!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The new password that you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"username\"\n                label=\"Username\"\n                tooltip=\"What do you want others to call you?\"\n                rules={[{ required: true, message: 'Please input your username!', whitespace: true }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"gender\"\n                label=\"Gender\"\n                rules={[{ required: true, message: 'Please select gender!' }]}\n            >\n                <Select placeholder=\"select your gender\">\n                    <Option value=\"male\">Male</Option>\n                    <Option value=\"female\">Female</Option>\n                    <Option value=\"other\">Other</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"agreement\"\n                valuePropName=\"checked\"\n                rules={[\n                    {\n                        validator: (_, value) =>\n                            value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\n                    },\n                ]}\n                {...tailFormItemLayout}\n            >\n                <Checkbox>\n                    I have read the <a href=\"\">agreement</a>\n                </Checkbox>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button block type=\"primary\" htmlType=\"submit\">\n                    Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}"],"names":["Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","_Form$useForm","Form","useForm","form","_slicedToArray","navigate","useNavigate","_jsxs","_objectSpread","name","className","onFinish","values","console","log","axios","post","then","response","data","code","message","success","startTransition","error","msg","catch","scrollToFirstError","children","_jsx","Item","label","rules","type","required","Input","hasFeedback","Password","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","tooltip","whitespace","placeholder","valuePropName","Checkbox","href","Button","block","htmlType"],"sourceRoot":""}