{"version":3,"file":"static/js/445.3c530e54.chunk.js","mappings":"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","sources":["views/Map.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF, PolylineF } from '@react-google-maps/api';\r\nimport '../App.css';\r\nimport { FloatButton, Button, Tooltip, Modal, Input, Upload, message } from 'antd';\r\nimport { useContext } from 'react';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { PlayCircleOutlined, StopOutlined, CompassOutlined, EyeOutlined, EyeInvisibleOutlined, PlusOutlined, ClearOutlined, DownloadOutlined, ShareAltOutlined } from '@ant-design/icons';\r\nimport html2canvas from 'html2canvas';\r\nimport Geocode from \"react-geocode\";\r\nimport { LoadingOutlined} from '@ant-design/icons';\r\n\r\nexport default function Map() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [trackingEnabled, setTrackingEnabled] = useState(false); // State to track whether geolocation tracking is enabled\r\n  const [pathId, setPathId] = useState(0);\r\n  // const [clearedPaths, setClearedPaths] = useState([]); // State to store cleared paths, probably needed for future features\r\n  const [currentPosition, setCurrentPositions] = useState({ lat: null, lng: null });\r\n  const [isPathsVisible, setIsPathsVisible] = useState(true);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n  const [mapZoom, setMapZoom] = useState(14);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n\r\n  const [inputText, setInputText] = useState('');\r\n  const [markerIcon, setMarkerIcon] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  const { addPath, displayedPath, setDisplayedPath } = useContext(SavedPathsContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n\r\n  const handleCancel = () => setPreviewOpen(false);\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n  \r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewOpen(true);\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  // const mapId = theme === 'default' ? '17e23ad9dc98cd76' : '965d3fbc319fcf57';\r\n\r\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\r\n\r\n  const darkMode = {\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    styles: [\r\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n      { featureType: \"administrative.locality\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"poi\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"poi.park\", elementType: \"geometry\", stylers: [{ color: \"#263c3f\" }] },\r\n      { featureType: \"poi.park\", elementType: \"labels.text.fill\", stylers: [{ color: \"#6b9a76\" }] },\r\n      { featureType: \"road\", elementType: \"geometry\", stylers: [{ color: \"#38414e\" }] },\r\n      { featureType: \"road\", elementType: \"geometry.stroke\", stylers: [{ color: \"#212a37\" }] },\r\n      { featureType: \"road\", elementType: \"labels.text.fill\", stylers: [{ color: \"#9ca5b3\" }] },\r\n      { featureType: \"road.highway\", elementType: \"geometry\", stylers: [{ color: \"#746855\" }] },\r\n      { featureType: \"road.highway\", elementType: \"geometry.stroke\", stylers: [{ color: \"#1f2835\" }] },\r\n      { featureType: \"road.highway\", elementType: \"labels.text.fill\", stylers: [{ color: \"#f3d19c\" }] },\r\n      { featureType: \"transit\", elementType: \"geometry\", stylers: [{ color: \"#2f3948\" }] },\r\n      { featureType: \"transit.station\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"water\", elementType: \"geometry\", stylers: [{ color: \"#17263c\" }] },\r\n      { featureType: \"water\", elementType: \"labels.text.fill\", stylers: [{ color: \"#515c6d\" }] },\r\n      { featureType: \"water\", elementType: \"labels.text.stroke\", stylers: [{ color: \"#17263c\" }] },\r\n    ],\r\n  };\r\n\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  \r\n  const handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      setImageUrl(URL.createObjectURL(info.file.originFileObj));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  function getLocation (){\r\n    return new Promise((resolve,reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          resolve({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  async function getAvgLocation(pathId) {\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: firstLat, longitude: firstLng } = await getLocation();\r\n    console.log({ firstLat, firstLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: secondLat, longitude: secondLng } = await getLocation();\r\n    console.log({ secondLat, secondLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: thirdLat, longitude: thirdLng } = await getLocation();\r\n    console.log({ thirdLat, thirdLng });\r\n\r\n    const position = {\r\n      latitude: (firstLat + secondLat + thirdLat) / 3.0,\r\n      longitude: (firstLng + secondLng + thirdLng) / 3.0\r\n    }\r\n\r\n    setPositions((prev) => [...prev, { lat: position.latitude, lng: position.longitude, type: \"default\", pathId }]);\r\n    setCurrentPositions({ lat: position.latitude, lng: position.longitude });\r\n\r\n    console.log(position);\r\n    setEndTime(new Date()); // Save the end time\r\n  }\r\n\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          // Set the default map center to the user's current location\r\n          setMapCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error retrieving geolocation:\", error);\r\n          // If can't get the user's current location, the set to a default location\r\n          setMapCenter({ lat: 40.7128, lng: -74.0060 }); // Anywhere can be changed later\r\n        }\r\n      );\r\n    } else {\r\n      // If the web browser doesn't support geolocation, also set a default center\r\n      setMapCenter({ lat: 40.7128, lng: -74.0060 });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (displayedPath && displayedPath.length > 0) {\r\n      // If there is a path to display, set the center point of the map to the first point of the displayed path\r\n      setMapCenter(displayedPath[0]);\r\n      setMapZoom(15);\r\n    } else if (positions.length > 0) {\r\n      // If there is no path to display, but is under tracking, set the center point of the map as the last tracked point\r\n      setMapCenter(positions[positions.length - 1]);\r\n    }\r\n    // If the geolocation cannot be obtained or there is no path being tracked, keep the center point unchanged\r\n  }, [displayedPath, positions]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    if (trackingEnabled) {\r\n      setStartTime(new Date()); // Save the start time\r\n      // Immediately get the current location\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setPositions((prev) => [...prev, { lat: latitude, lng: longitude, type: \"default\", pathId }]);\r\n          setCurrentPositions({ lat: latitude, lng: longitude });\r\n          console.log(\"Got first location after click the button\");\r\n        },\r\n        (error) => {\r\n          console.error('Error retrieving geolocation:', error);\r\n        }\r\n      );\r\n\r\n      // Start tracking location every 10 seconds\r\n      interval = setInterval(async () => {\r\n        console.log(\"Start Marking\");\r\n        await getAvgLocation(pathId);\r\n        console.log(\"Get a location\");\r\n        console.log(pathId);\r\n\r\n      }, 8000);\r\n    }\r\n\r\n    // Cleanup function to clear interval when component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [trackingEnabled, pathId]);\r\n\r\n  const handleStartTracking = () => {\r\n    setPositions([]); // clear positions before a new tracking\r\n    setTrackingEnabled(true);\r\n    setPathId(pathId + 1);\r\n    console.log(\"Start tracking\");\r\n  };\r\n\r\n  Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\r\n\r\n  const handleStopTracking = () => {\r\n    setTrackingEnabled(false);\r\n    console.log(\"Stop tracking\");\r\n\r\n    const duration = (endTime - startTime) / 1000; // Calculate the duration in seconds\r\n    if (duration < 10) {\r\n      Modal.warning({\r\n        centered: true,\r\n        title: 'Warning',\r\n        content: 'The path is less than 10 seconds long and will not be saved.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    Modal.confirm({\r\n      centered: true,\r\n      title: 'Do you want to save this path?',\r\n      onOk: () => {\r\n        const startCoordinates = positions[0];\r\n        const endCoordinates = positions[positions.length - 1];\r\n\r\n        // 使用逆地理编码服务获取开始点的地址\r\n        Geocode.fromLatLng(startCoordinates.lat, startCoordinates.lng)\r\n          .then((response) => {\r\n            const startAddress = response.results[0].formatted_address;\r\n\r\n            // 使用逆地理编码服务获取结束点的地址\r\n            Geocode.fromLatLng(endCoordinates.lat, endCoordinates.lng)\r\n              .then((response) => {\r\n                const endAddress = response.results[0].formatted_address;\r\n\r\n                const pathData = {\r\n                  path: positions,\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  duration: duration,\r\n                  startAddress: startAddress,\r\n                  endAddress: endAddress,\r\n                };\r\n                addPath(pathData);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error geocoding end coordinates:\", error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error geocoding start coordinates:\", error);\r\n          });\r\n      },\r\n      // No action on cancel, as we just close the modal\r\n    });\r\n  };\r\n\r\n  const handleMarkerClick = () => {\r\n    Modal.confirm({\r\n      title: 'The comment you left in this place',\r\n      content: (\r\n        <Input\r\n          placeholder=\"Input something...\"\r\n          defaultValue={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n        />\r\n      ),\r\n      onOk: (close) => {\r\n        close();\r\n      },\r\n    });\r\n  };\r\n  \r\n\r\n  // Group positions by pathId\r\n  const positionByPathId = positions.reduce((acc, position) => {\r\n    (acc[position.pathId] = acc[position.pathId] || []).push(position);\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleClearPaths = () => {\r\n    // setClearedPaths(positions);\r\n    setPositions([]);\r\n    setPathId(0);\r\n    setDisplayedPath([]);\r\n  }\r\n\r\n  const togglePathsVisibility = () => {\r\n    setIsPathsVisible(!isPathsVisible);\r\n  };\r\n\r\n  const handleAddPoint = () => {\r\n    const { lat, lng } = currentPosition;\r\n\r\n    Modal.confirm({\r\n      title: 'Set a New Marker',\r\n      content: (\r\n        <div>\r\n          Marker icon:\r\n          <Upload\r\n            listType=\"picture-circle\"\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            onPreview={handlePreview}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n         \r\n          </Upload>\r\n\r\n          Comment:\r\n          \r\n          <Input\r\n          placeholder=\"Input something...\"\r\n          defaultValue={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n        />\r\n\r\n\r\n          <Modal \r\n            open = {previewOpen} \r\n            title = 'The Marker Preview'\r\n            footer = {null}\r\n            onCancel ={handleCancel}\r\n          >\r\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </div>\r\n      ),\r\n      onOk: (close) => {\r\n        close();\r\n      },\r\n    });\r\n\r\n\r\n    const newMarker = {\r\n      lat,\r\n      lng,\r\n      type: \"custom\",\r\n      id: Date.now(), // Assign a unique ID to the marker\r\n    };\r\n\r\n    setPositions((prevPositions) => [...prevPositions, newMarker]);\r\n    console.log(\"Add an information point\");\r\n  };\r\n\r\n  const handleScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const link = document.createElement('a');\r\n      link.href = canvas.toDataURL('image/png');\r\n      link.download = 'screenshot.png';\r\n      link.click();\r\n\r\n      setIsTakingScreenshot(false);\r\n    });\r\n  };\r\n\r\n  const handleShareScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const blob = canvas.toBlob((blob) => {\r\n        if (blob) {\r\n          const file = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n\r\n          if (navigator.share) {\r\n            // Share the screenshot using the Web Share API\r\n            navigator.share({\r\n              files: [file],\r\n            });\r\n          } else {\r\n            console.error('Web Share API not supported.');\r\n          }\r\n        } else {\r\n          console.error('Failed to generate screenshot blob.');\r\n        }\r\n\r\n        setIsTakingScreenshot(false);\r\n      });\r\n    });\r\n  };\r\n\r\n  if (!isLoaded) return <div>Loading..</div>\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          mapContainerClassName=\"map-container\"\r\n          options={{\r\n            fullscreenControl: false,\r\n            streetViewControl: false,\r\n            ...theme === 'default' ? {} : darkMode,\r\n          }}\r\n        >\r\n          {isPathsVisible && Object.values(positionByPathId).map((pathPositions, index) => (\r\n            <PolylineF\r\n              key={index}\r\n              path={pathPositions}\r\n              options={{\r\n                strokeColor: '#0000FF',\r\n                // strokeColor: parseInt(pathId) % 2 === 0 ? '#0000FF' : '#00FF00',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {displayedPath && isPathsVisible && ( // Display the saved path\r\n            <PolylineF\r\n              path={displayedPath}\r\n              options={{\r\n                strokeColor: '#FF0000',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {positions.map((position, index) => (\r\n            <MarkerF\r\n              key={index}\r\n              position={position}\r\n              visible = {position.type === 'custom'}\r\n              icon={position.type === 'custom' ? markerIcon : null}\r\n              onClick={handleMarkerClick}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n\r\n        {/* Main start/stop button */}\r\n        <div className='map-view-start-stop-button'>\r\n          {trackingEnabled ? (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStopTracking}\r\n              icon={<StopOutlined />}\r\n              style={{ backgroundColor: 'OrangeRed' }}\r\n            >\r\n              STOP\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStartTracking}\r\n              icon={<PlayCircleOutlined />}\r\n              style={{ backgroundColor: 'LimeGreen' }}\r\n            >\r\n              START\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text location information and back to top button*/}\r\n        <FloatButton.Group shape=\"circle\" style={{ left: 24 }}>\r\n          <Tooltip\r\n            title={\r\n              <div>\r\n                <h1>Your current location:</h1>\r\n                <p>Latitude: {currentPosition.lat} </p>\r\n                <p>Longitude: {currentPosition.lng}</p>\r\n              </div>\r\n            }\r\n            placement='right'\r\n            color='#87d068'\r\n          >\r\n            <FloatButton\r\n              icon={<CompassOutlined />}\r\n            />\r\n          </Tooltip>\r\n\r\n          <FloatButton.BackTop visibilityHeight={0} />\r\n        </FloatButton.Group>\r\n\r\n\r\n        {/* Functional buttons group */}\r\n        <FloatButton.Group shape=\"circle\" style={{ right: 50, top: '60%', transform: 'translateY(-50%)' }}>\r\n          {isPathsVisible ? (\r\n            <FloatButton\r\n              icon={<EyeInvisibleOutlined />}\r\n              tooltip='Hide Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          ) : (\r\n            <FloatButton\r\n              icon={<EyeOutlined />}\r\n              tooltip='Show Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          )}\r\n\r\n          <FloatButton\r\n            icon={<PlusOutlined />}\r\n            tooltip='Add a Point'\r\n            onClick={handleAddPoint}\r\n            disabled={!trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ClearOutlined />}\r\n            tooltip='Clear'\r\n            onClick={handleClearPaths}\r\n            disabled={trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<DownloadOutlined />}\r\n            tooltip=\"Take Screenshot\"\r\n            onClick={handleScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ShareAltOutlined />}\r\n            tooltip=\"Share\"\r\n            onClick={handleShareScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n        </FloatButton.Group>\r\n\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}"],"names":["Map","_useState","useState","_useState2","_slicedToArray","positions","setPositions","_useState3","_useState4","trackingEnabled","setTrackingEnabled","_useState5","_useState6","pathId","setPathId","_useState7","lat","lng","_useState8","currentPosition","setCurrentPositions","_useState9","_useState10","isPathsVisible","setIsPathsVisible","_useState11","_useState12","mapCenter","setMapCenter","_useState13","_useState14","mapZoom","setMapZoom","_useState15","_useState16","startTime","setStartTime","_useState17","_useState18","endTime","setEndTime","_useState19","_useState20","inputText","setInputText","_useState21","_useState22","markerIcon","_useState23","_useState24","loading","setLoading","_useState25","_useState26","imageUrl","setImageUrl","_useContext","useContext","SavedPathsContext","addPath","displayedPath","setDisplayedPath","theme","ThemeContext","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_useState27","_useState28","previewOpen","setPreviewOpen","_useState29","_useState30","previewImage","setPreviewImage","_useState31","_useState32","handleCancel","handlePreview","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","url","preview","originFileObj","sent","stop","_x","apply","arguments","isLoaded","useLoadScript","googleMapsApiKey","process","_useState33","_useState34","isTakingScreenshot","setIsTakingScreenshot","uploadButton","_jsxs","children","_jsx","LoadingOutlined","PlusOutlined","style","marginTop","handleChange","info","status","URL","createObjectURL","getLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","getAvgLocation","_x2","_getAvgLocation","_callee5","_yield$getLocation","firstLat","firstLng","_yield$getLocation2","secondLat","secondLng","_yield$getLocation3","thirdLat","thirdLng","_context5","setTimeout","console","log","concat","_toConsumableArray","type","Date","useEffect","length","interval","_position$coords2","setInterval","_callee2","_context2","clearInterval","Geocode","setApiKey","handleMarkerClick","Modal","confirm","title","content","Input","placeholder","defaultValue","onChange","e","target","value","onOk","close","positionByPathId","reduce","acc","push","togglePathsVisibility","handleScreenshot","_ref3","_callee3","mapContainer","_context3","document","querySelector","html2canvas","useCORS","allowTaint","then","canvas","link","createElement","href","toDataURL","download","click","handleShareScreenshot","_ref4","_callee4","_context4","toBlob","blob","File","share","files","className","GoogleMap","center","zoom","mapContainerClassName","options","_objectSpread","fullscreenControl","streetViewControl","styles","elementType","stylers","color","featureType","Object","values","map","pathPositions","index","PolylineF","path","strokeColor","strokeOpacity","strokeWeight","MarkerF","visible","icon","onClick","Button","shape","size","duration","warning","centered","startCoordinates","endCoordinates","fromLatLng","response","startAddress","results","formatted_address","endAddress","catch","StopOutlined","backgroundColor","PlayCircleOutlined","FloatButton","Group","left","Tooltip","placement","CompassOutlined","BackTop","visibilityHeight","right","top","transform","EyeInvisibleOutlined","tooltip","EyeOutlined","Upload","listType","action","onPreview","src","alt","width","open","footer","onCancel","newMarker","id","now","prevPositions","disabled","ClearOutlined","DownloadOutlined","ShareAltOutlined"],"sourceRoot":""}