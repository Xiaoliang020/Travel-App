{"version":3,"file":"static/js/951.1f6fa625.chunk.js","mappings":"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","sources":["../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","views/Settings.js","../node_modules/antd/es/grid/hooks/useBreakpoint.js"],"sourcesContent":["'use client';\n\nimport { Row } from '../grid';\nexport default Row;","'use client';\n\nimport { Col } from '../grid';\nexport default Col;","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UploadOutlined.displayName = 'UploadOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Modal, Button, Card, Row, Col, message, Avatar, Upload } from 'antd';\r\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { ThemeContext } from '../App';\r\nimport defaultImage from '../picture/Default.png'\r\nimport nightImage from '../picture/Night.png'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport axios from 'axios';\r\n\r\nexport default function Settings() {\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n    const { Meta } = Card;\r\n    // State to store the user's avatarData\r\n    const [userAvatarData, setUserAvatarData] = useState(null);\r\n    // Get the user info stored in sessionStorage\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n    // Fetch the user's avatarUrl when the component mounts\r\n    useEffect(() => {\r\n        // Make an API call to fetch the user data, including the avatarUrl\r\n        axios.get(`${apiUrl}/api/avatar/${user.id}`)\r\n        .then((response) => {\r\n            if (response.data.code === '0') {\r\n                const imageBase64 = response.data.data;\r\n                // Set the userAvatarUrl state with the fetched avatar data\r\n                setUserAvatarData(`data:image/png;base64,${imageBase64}`);\r\n            } else {\r\n                console.log(response.data.msg);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching user data:', error);\r\n        });\r\n    }, []);\r\n\r\n    const handleThemeChange = (newTheme) => {\r\n        setTheme(newTheme);\r\n        message.success('Theme switched successfully!');\r\n    };\r\n\r\n    const handleAvatarChange = (info) => {\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} uploaded successfully`);\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} upload failed.`);\r\n        }\r\n    };\r\n\r\n    const customRequest = async ({ file, onSuccess, onError }) => {\r\n        try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        // Change the URL to your backend endpoint that handles the avatar upload\r\n        const response = await axios.post(`${apiUrl}/api/${user.id}/upload-avatar`, formData);\r\n        if (response.data.code === '0') {\r\n            // Save the file URL or file ID returned by the backend\r\n            console.log('Avatar uploaded successfully:', response.data);\r\n            onSuccess();\r\n            window.location.reload();\r\n        } else {\r\n            onError(new Error('Failed to upload avatar'));\r\n        }\r\n        } catch (error) {\r\n            console.error('Error uploading avatar:', error);\r\n            onError(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ textAlign: 'center' }}>\r\n                {/* Display the user's avatar if available, otherwise show the default user icon */}\r\n                {userAvatarData ? (\r\n                    <Avatar size={100} src={userAvatarData} />\r\n                ) : (\r\n                    <Avatar size={100} icon={<UserOutlined />} />\r\n                )}\r\n\r\n                <div style={{ marginTop: 16, marginBottom: 16 }}>\r\n                <ImgCrop\r\n                    rotationSlider={true}\r\n                    zoomSlider={true}\r\n                    quality={1}\r\n                    cropShape='round'\r\n                >\r\n                    <Upload customRequest={customRequest} showUploadList={false} onChange={handleAvatarChange}>\r\n                        <Button icon={<UploadOutlined />}>Upload Avatar</Button>\r\n                    </Upload>\r\n                </ImgCrop>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <Card title=\"Select Theme\">\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ flex: 1 }}\r\n                                cover={<img src={defaultImage} alt=\"Default Mode\" />}\r\n                                onClick={() => handleThemeChange('default')}\r\n                            >\r\n                                <Meta title=\"Default Mode\" />\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ flex: 1 }}\r\n                                cover={<img src={nightImage} alt=\"Night Mode\" />}\r\n                                onClick={() => handleThemeChange('dark')}\r\n                            >\r\n                                <Meta title=\"Night Mode\" />\r\n                            </Card>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useEffect, useRef } from 'react';\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const screensRef = useRef({});\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;"],"names":["UploadOutlined","props","ref","React","AntdIcon","_extends","icon","UploadOutlinedSvg","Settings","_useContext","useContext","ThemeContext","setTheme","theme","Meta","Card","_useState","useState","_useState2","_slicedToArray","userAvatarData","setUserAvatarData","user","JSON","parse","sessionStorage","getItem","apiUrl","process","useEffect","axios","get","concat","id","then","response","data","code","imageBase64","console","log","msg","catch","error","handleThemeChange","newTheme","message","success","customRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","file","onSuccess","onError","formData","wrap","_context","prev","next","FormData","append","post","sent","window","location","reload","Error","t0","stop","_x","apply","arguments","_jsxs","children","style","textAlign","_jsx","Avatar","size","src","UserOutlined","marginTop","marginBottom","ImgCrop","rotationSlider","zoomSlider","quality","cropShape","Upload","showUploadList","onChange","info","status","name","Button","title","Row","gutter","Col","span","hoverable","flex","cover","defaultImage","alt","onClick","nightImage","refreshOnChange","length","undefined","screensRef","useRef","forceUpdate","useForceUpdate","responsiveObserver","useResponsiveObserver","token","subscribe","supportScreens","current","unsubscribe"],"sourceRoot":""}