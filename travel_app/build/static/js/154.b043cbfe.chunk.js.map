{"version":3,"file":"static/js/154.b043cbfe.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/MessageOutlined.js","../node_modules/@ant-design/icons/es/icons/MessageOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FormOutlined.js","../node_modules/@ant-design/icons/es/icons/FormOutlined.js","views/Community.js","../node_modules/antd/es/space/context.js","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js"],"sourcesContent":["// This icon file is generated automatically.\nvar MessageOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" } }] }, \"name\": \"message\", \"theme\": \"outlined\" };\nexport default MessageOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport MessageOutlinedSvg from \"@ant-design/icons-svg/es/asn/MessageOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar MessageOutlined = function MessageOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: MessageOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  MessageOutlined.displayName = 'MessageOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(MessageOutlined);","// This icon file is generated automatically.\nvar FormOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\" } }] }, \"name\": \"form\", \"theme\": \"outlined\" };\nexport default FormOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport FormOutlinedSvg from \"@ant-design/icons-svg/es/asn/FormOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar FormOutlined = function FormOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: FormOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FormOutlined.displayName = 'FormOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(FormOutlined);","import React, { useState, useEffect } from 'react';\r\nimport { FormOutlined, LikeOutlined, MessageOutlined } from '@ant-design/icons';\r\nimport { Avatar, List, Space, FloatButton, Form, Modal, Input, message, Select, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../assets/styles/community.css';\r\n\r\nconst IconText = ({ icon, text }) => (\r\n    <Space>\r\n        {React.createElement(icon)}\r\n        {text}\r\n    </Space>\r\n);\r\n\r\nexport default function Community() {\r\n    let userStr = localStorage.getItem(\"user\") || \"{}\"\r\n    let user = JSON.parse(userStr);\r\n    const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [selectedPathId, setSelectedPathId] = useState('');\r\n    const [paths, setPaths] = useState([]);\r\n    // Add state to store the list of paths for the user to select\r\n    const [pathOptions, setPathOptions] = useState([]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const filteredPosts = posts.filter(post => {\r\n        const combinedString = `${user.username} ${post.title} ${post.content} `.toLowerCase();\r\n        return combinedString.includes(searchTerm.toLowerCase());\r\n    });\r\n\r\n    const getCurrentWebsiteURL = () => {\r\n        const protocol = window.location.protocol;\r\n        const hostname = window.location.hostname;\r\n        const port = window.location.port;\r\n\r\n        // If the port is empty or equal to 80 (HTTP) or 443 (HTTPS), don't include it in the URL\r\n        const portSuffix = (port && port !== '80' && port !== '443') ? `:${port}` : '';\r\n\r\n        // Assemble the website URL\r\n        const websiteURL = `${protocol}//${hostname}${portSuffix}`;\r\n\r\n        return websiteURL;\r\n    };\r\n\r\n    const currentURL = getCurrentWebsiteURL();\r\n\r\n    const fetchPosts = () => {\r\n        setIsLoading(true);\r\n\r\n        axios\r\n            .get(`${apiUrl}/api/posts`)\r\n            .then((response) => {\r\n                if (response.data.code === '0') {\r\n                    console.log('Successfully fetched post data', response.data.data);\r\n                    const postData = response.data.data;\r\n                    // Fetch the user avatar for each post and update the data array\r\n                    const fetchUserAvatars = postData.map((post) => {\r\n                        return axios\r\n                            .get(`${apiUrl}/api/avatar/${post.userid}`)\r\n                            .then((avatarResponse) => {\r\n                                if (avatarResponse.data.code === '0') {\r\n                                    const avatarData = avatarResponse.data.data;\r\n                                    post.avatar = `data:image/png;base64,${avatarData}`;\r\n                                }\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error fetching user avatar:', error);\r\n                            });\r\n                    });\r\n\r\n                    const fetchPostScreenshot = postData.map((post) => {\r\n                        return axios\r\n                            .get(`${apiUrl}/api/screenshot/${post.pathid}`)\r\n                            .then((screenshotResponse) => {\r\n                                if (screenshotResponse.data.code === '0') {\r\n                                    const screenshotData = screenshotResponse.data.data;\r\n                                    post.screenshot = `data:image/png;base64,${screenshotData}`;\r\n                                }\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error fetching user screenshot:', error);\r\n                            });\r\n                    });\r\n\r\n                    // Wait for all the avatar fetch calls to finish before updating the data array\r\n                    Promise.all([...fetchUserAvatars, ...fetchPostScreenshot])\r\n                        .then(() => {\r\n                            // Sort the posts by createdAt in descending order (newest first)\r\n                            postData.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n                            setPosts(postData);\r\n                            console.log(\"Post Data: \", postData);\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('Error fetching user avatars:', error);\r\n                        });\r\n                } else {\r\n                    console.log('Error fetching post data:', response.data.message);\r\n                }\r\n                // Clear loading state when API call is completed\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching post data:', error);\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const calculateTimeAgo = (createdAt) => {\r\n        const postDate = new Date(createdAt);\r\n        const currentDate = new Date();\r\n        const timeDiff = currentDate.getTime() - postDate.getTime();\r\n\r\n        // Calculate the time in seconds, minutes, hours, or days\r\n        const seconds = Math.floor(timeDiff / 1000);\r\n        const minutes = Math.floor(timeDiff / (1000 * 60));\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n\r\n        if (days > 0) {\r\n            return `${days} ${days === 1 ? 'day' : 'days'} ago`;\r\n        } else if (hours > 0) {\r\n            return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;\r\n        } else {\r\n            return `${seconds} ${seconds === 1 ? 'second' : 'seconds'} ago`;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${apiUrl}/api/paths/${user.id}`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setPaths(response.data.data);\r\n                // Format the paths data into options for the Select component\r\n                const formattedOptions = response.data.data.map((path) => ({\r\n                    value: path.id,\r\n                    label: path.name,\r\n                }));\r\n                setPathOptions(formattedOptions);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error retrieving paths:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleMakePost = () => {\r\n        setModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setModalVisible(false);\r\n    };\r\n\r\n    const handleFormSubmit = () => {\r\n        form.validateFields().then((values) => {\r\n            // Make an API call to save the post data to your backend\r\n            const postData = {\r\n                title: values.title,\r\n                content: values.content,\r\n                userid: user.id,\r\n                username: user.username,\r\n                avatarid: user.avatarUrl,\r\n                pathid: selectedPathId,\r\n            };\r\n            // Get the current date and time to set the createdAt field\r\n            const currentDate = new Date();\r\n            postData.createdAt = currentDate.toISOString(); // Convert date to ISO string format\r\n            console.log(postData);\r\n\r\n            // Make the API call using axios\r\n            axios.post(`${apiUrl}/api/make-post`, postData)\r\n                .then((response) => {\r\n                    // Handle successful response\r\n                    if (response.data.code === '0') {\r\n                        console.log('Post saved successfully:', response.data);\r\n                        // After successfully adding the post, fetch the posts data again\r\n                        fetchPosts();\r\n                    } else {\r\n                        message.error('Failed to make a post');\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    // Handle error\r\n                    console.error('Error saving post:', error);\r\n                });\r\n\r\n            // Close the modal after form submission\r\n            setModalVisible(false);\r\n            form.resetFields();\r\n            setSelectedPathId(''); // Reset the selectedPathId state\r\n        });\r\n    };\r\n\r\n    const handleLikePost = (postId) => {\r\n        console.log(\"Liked \", postId);\r\n    }\r\n\r\n    return (\r\n        <div className='community'>\r\n            <Input\r\n                placeholder=\"Search for posts...\"\r\n                value={searchTerm}\r\n                onChange={e => setSearchTerm(e.target.value)}\r\n                style={{ marginBottom: '20px' }}\r\n            />\r\n            {isLoading ? (\r\n                <div>Loading...</div> // Show a loading indicator while fetching data\r\n            ) : (\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    pagination={{\r\n                        onChange: (page) => {\r\n                            console.log(page);\r\n                        },\r\n                        pageSize: 3,\r\n                    }}\r\n                    dataSource={filteredPosts}\r\n                    footer={\r\n                        <div>\r\n                            <b>travel app</b> footer part\r\n                        </div>\r\n                    }\r\n                    renderItem={(item) => (\r\n                        <Link to={`/post/${item.id}`} >\r\n                            <List.Item\r\n                                key={item.title}\r\n                                className=\"post-item\"\r\n                                actions={[\r\n                                    <IconText icon={MessageOutlined} text={item.comments ? item.comments.length : 0} key=\"list-vertical-message\" />,\r\n                                ]}\r\n                                extra={\r\n                                    item.pathid ? (\r\n                                        <a href={`${currentURL}/share/${item.pathid}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <img\r\n                                                width={272}\r\n                                                alt=\"logo\"\r\n                                                src={item.screenshot}\r\n                                                onClick={(e) => e.stopPropagation()} // Prevent the click event from propagating\r\n                                            />\r\n                                        </a>\r\n                                    ) : (\r\n                                        <img\r\n                                            width={272}\r\n                                            alt=\"logo\"\r\n                                            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                                        />\r\n                                    )\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <List.Item.Meta\r\n                                        avatar={<Avatar src={item.avatar} />}\r\n                                        title={item.username}\r\n                                        description={\r\n                                            <>\r\n                                                {`Posted ${calculateTimeAgo(item.createdAt)}`}\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"post-content\" style={{ textAlign: 'left' }}>\r\n                                    <div style={{ fontSize: 'larger', fontWeight: 'bold' }}>\r\n                                        {item.title}\r\n                                    </div>\r\n                                    <br />\r\n                                    {item.content}\r\n                                </div>\r\n                            </List.Item>\r\n                        </Link>\r\n                    )}\r\n                />\r\n            )}\r\n            <FloatButton.Group shape=\"circle\" style={{ left: 250, top: '95%', transform: 'translateY(-50%)' }}>\r\n                <FloatButton\r\n                    icon={<FormOutlined />}\r\n                    tooltip='Make a Post'\r\n                    onClick={handleMakePost}\r\n                />\r\n            </FloatButton.Group>\r\n\r\n            {/* Modal for making a post */}\r\n            <Modal\r\n                title=\"Make a Post\"\r\n                open={isModalVisible}\r\n                onCancel={handleCancel}\r\n                onOk={handleFormSubmit}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        label=\"Title\"\r\n                        name=\"title\"\r\n                        rules={[{ required: true, message: 'Please enter a title' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Content\"\r\n                        name=\"content\"\r\n                        rules={[{ required: true, message: 'Please enter the content' }]}\r\n                    >\r\n                        <Input.TextArea />\r\n                    </Form.Item>\r\n\r\n                    {/* Add a list of paths for the user to select */}\r\n                    <Form.Item label=\"Select a path\">\r\n                        <Select\r\n                            showSearch\r\n                            style={{\r\n                                width: 200,\r\n                            }}\r\n                            placeholder=\"Search to Select\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) => (option?.label ?? '').includes(input)}\r\n                            filterSort={(optionA, optionB) =>\r\n                                (optionA?.label ?? '').toLowerCase().localeCompare((optionB?.label ?? '').toLowerCase())\r\n                            }\r\n                            options={pathOptions}\r\n                            value={selectedPathId} // Set the selected value for the Select component\r\n                            onChange={setSelectedPathId} // Handle selecting a path\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nexport const SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nexport const SpaceContextProvider = SpaceContext.Provider;","import * as React from 'react';\nimport { SpaceContext } from './context';\nconst Item = _ref => {\n  let {\n    className,\n    direction,\n    index,\n    marginDirection,\n    children,\n    split,\n    wrap,\n    style: customStyle\n  } = _ref;\n  const {\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  } = React.useContext(SpaceContext);\n  let style = {};\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = Object.assign(Object.assign({}, index < latestIndex && {\n        [marginDirection]: horizontalSize / (split ? 2 : 1)\n      }), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: Object.assign(Object.assign({}, style), customStyle)\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${className}-split`,\n    style: style\n  }, split));\n};\nexport default Item;","'use client';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nimport { ConfigContext } from '../config-provider';\nimport Compact from './Compact';\nimport Item from './Item';\nimport { SpaceContextProvider } from './context';\nimport useStyle from './style';\nexport { SpaceContext } from './context';\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\nconst Space = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    getPrefixCls,\n    space,\n    direction: directionConfig\n  } = React.useContext(ConfigContext);\n  const {\n      size = (space === null || space === void 0 ? void 0 : space.size) || 'small',\n      align,\n      className,\n      rootClassName,\n      children,\n      direction = 'horizontal',\n      prefixCls: customizePrefixCls,\n      split,\n      style,\n      wrap = false,\n      classNames: customClassNames,\n      styles\n    } = props,\n    otherProps = __rest(props, [\"size\", \"align\", \"className\", \"rootClassName\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\", \"classNames\", \"styles\"]);\n  const supportFlexGap = useFlexGapSupport();\n  const [horizontalSize, verticalSize] = React.useMemo(() => (Array.isArray(size) ? size : [size, size]).map(item => getNumberSize(item)), [size]);\n  const childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  const mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  const prefixCls = getPrefixCls('space', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cn = classNames(prefixCls, space === null || space === void 0 ? void 0 : space.className, hashId, `${prefixCls}-${direction}`, {\n    [`${prefixCls}-rtl`]: directionConfig === 'rtl',\n    [`${prefixCls}-align-${mergedAlign}`]: mergedAlign\n  }, className, rootClassName);\n  const itemClassName = classNames(`${prefixCls}-item`, (_a = customClassNames === null || customClassNames === void 0 ? void 0 : customClassNames.item) !== null && _a !== void 0 ? _a : (_b = space === null || space === void 0 ? void 0 : space.classNames) === null || _b === void 0 ? void 0 : _b.item);\n  const marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n  // Calculate latest one\n  let latestIndex = 0;\n  const nodes = childNodes.map((child, i) => {\n    var _a, _b;\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    const key = child && child.key || `${itemClassName}-${i}`;\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap,\n      style: (_a = styles === null || styles === void 0 ? void 0 : styles.item) !== null && _a !== void 0 ? _a : (_b = space === null || space === void 0 ? void 0 : space.styles) === null || _b === void 0 ? void 0 : _b.item\n    }, child);\n  });\n  const spaceContext = React.useMemo(() => ({\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  }), [horizontalSize, verticalSize, latestIndex, supportFlexGap]);\n  // =========================== Render ===========================\n  if (childNodes.length === 0) {\n    return null;\n  }\n  const gapStyle = {};\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap';\n    // Patch for gap not support\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: cn,\n    style: Object.assign(Object.assign(Object.assign({}, gapStyle), space === null || space === void 0 ? void 0 : space.style), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContextProvider, {\n    value: spaceContext\n  }, nodes)));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Space.displayName = 'Space';\n}\nconst CompoundedSpace = Space;\nCompoundedSpace.Compact = Compact;\nexport default CompoundedSpace;"],"names":["MessageOutlined","props","ref","React","AntdIcon","_extends","icon","MessageOutlinedSvg","FormOutlined","FormOutlinedSvg","IconText","_ref","text","_jsxs","Space","children","Community","userStr","localStorage","getItem","user","JSON","parse","apiUrl","process","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isModalVisible","setModalVisible","_Form$useForm","Form","useForm","form","_useState5","_useState6","posts","setPosts","_useState7","_useState8","selectedPathId","setSelectedPathId","_useState9","_useState10","setPaths","_useState11","_useState12","pathOptions","setPathOptions","_useState13","_useState14","searchTerm","setSearchTerm","filteredPosts","filter","post","concat","username","title","content","toLowerCase","includes","currentURL","protocol","window","location","hostname","port","portSuffix","getCurrentWebsiteURL","fetchPosts","axios","get","then","response","data","code","console","log","postData","fetchUserAvatars","map","userid","avatarResponse","avatarData","avatar","catch","error","fetchPostScreenshot","pathid","screenshotResponse","screenshotData","screenshot","Promise","all","_toConsumableArray","sort","a","b","Date","createdAt","message","calculateTimeAgo","postDate","timeDiff","getTime","seconds","Math","floor","minutes","hours","days","useEffect","id","formattedOptions","path","value","label","name","className","_jsx","Input","placeholder","onChange","e","target","style","marginBottom","List","itemLayout","size","pagination","page","pageSize","dataSource","footer","renderItem","item","Link","to","Item","actions","comments","length","extra","href","rel","width","alt","src","onClick","stopPropagation","Meta","Avatar","description","_Fragment","textAlign","fontSize","fontWeight","FloatButton","Group","shape","left","top","transform","tooltip","Modal","open","onCancel","onOk","validateFields","values","avatarid","avatarUrl","currentDate","toISOString","resetFields","layout","rules","required","TextArea","Select","showSearch","optionFilterProp","filterOption","input","option","_option$label","filterSort","optionA","optionB","_optionA$label","_optionB$label","localeCompare","options","SpaceContext","latestIndex","horizontalSize","verticalSize","supportFlexGap","SpaceContextProvider","Provider","direction","index","marginDirection","split","wrap","customStyle","_React$useContext","Object","assign","_defineProperty","paddingBottom","undefined","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","_classNames","_a","_b","ConfigContext","getPrefixCls","space","directionConfig","_props$size","align","rootClassName","_props$direction","customizePrefixCls","prefixCls","_props$wrap","customClassNames","classNames","styles","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","getNumberSize","_React$useMemo2","childNodes","toArray","keepEmpty","mergedAlign","_useStyle","useStyle","_useStyle2","wrapSSR","hashId","cn","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","CompoundedSpace","Compact"],"sourceRoot":""}