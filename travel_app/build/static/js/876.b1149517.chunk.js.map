{"version":3,"file":"static/js/876.b1149517.chunk.js","mappings":"yKAiCA,UA7BA,WACI,IAAMA,EAASC,sBACPC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAkB5B,OAhBAI,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAIV,GAGZW,EAAAA,EACKC,IAAI,GAADC,OAAIf,EAAM,SAAAe,OAAQb,IACrBc,MAAK,SAACC,GACHN,QAAQC,IAAIK,EAASC,MAErBT,EAAYQ,EAASC,KAAKA,KAC9B,IACCC,OAAM,SAACC,GACJT,QAAQS,MAAM,wBAAyBA,EAC3C,GACR,GAAG,CAACpB,EAAQE,IAEPM,GAKEa,EAAAA,EAAAA,KAAA,OAAKC,IAAG,yBAAAP,OAA2BP,GAAYe,IAAI,iBAH/CF,EAAAA,EAAAA,KAAA,OAAAG,SAAK,cAIpB,C","sources":["views/Image.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Image() {\r\n    const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n    const { imageId } = useParams();\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log(imageId);\r\n        // Make an API call to your backend to fetch the image URL based on the imageId\r\n        // For example, you can use axios to make the API call\r\n        axios\r\n            .get(`${apiUrl}/img/${imageId}`)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                // Assuming the response.data contains the image URL\r\n                setImageUrl(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching image:', error);\r\n            });\r\n    }, [apiUrl, imageId]);\r\n\r\n    if (!imageUrl) {\r\n        // Render a placeholder or loading state while the image is being fetched\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return <img src={`data:image/png;base64,${imageUrl}`} alt=\"User Avatar\" />;\r\n}\r\n\r\nexport default Image;\r\n"],"names":["apiUrl","process","imageId","useParams","_useState","useState","_useState2","_slicedToArray","imageUrl","setImageUrl","useEffect","console","log","axios","get","concat","then","response","data","catch","error","_jsx","src","alt","children"],"sourceRoot":""}