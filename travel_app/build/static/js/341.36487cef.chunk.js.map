{"version":3,"file":"static/js/341.36487cef.chunk.js","mappings":"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","sources":["picture/flaggreen.svg","picture/flagred.svg","views/mapStyles.js","views/Map.js"],"sourcesContent":["var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFlaggreen(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"1em\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"svg{fill:#00ff00}\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlaggreen);\nexport default __webpack_public_path__ + \"static/media/flaggreen.0d04a2a14a4cda256aa08ab3061b4a28.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFlagred(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"1em\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"svg{fill:#ff0000}\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlagred);\nexport default __webpack_public_path__ + \"static/media/flagred.7ce369b6a269d5ef47359565b2ded2dc.svg\";\nexport { ForwardRef as ReactComponent };","export const darkMode = {\n    fullscreenControl: false,\n    streetViewControl: false,\n    styles: [\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\n      { featureType: \"administrative.locality\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"poi\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"poi.park\", elementType: \"geometry\", stylers: [{ color: \"#263c3f\" }] },\n      { featureType: \"poi.park\", elementType: \"labels.text.fill\", stylers: [{ color: \"#6b9a76\" }] },\n      { featureType: \"road\", elementType: \"geometry\", stylers: [{ color: \"#38414e\" }] },\n      { featureType: \"road\", elementType: \"geometry.stroke\", stylers: [{ color: \"#212a37\" }] },\n      { featureType: \"road\", elementType: \"labels.text.fill\", stylers: [{ color: \"#9ca5b3\" }] },\n      { featureType: \"road.highway\", elementType: \"geometry\", stylers: [{ color: \"#746855\" }] },\n      { featureType: \"road.highway\", elementType: \"geometry.stroke\", stylers: [{ color: \"#1f2835\" }] },\n      { featureType: \"road.highway\", elementType: \"labels.text.fill\", stylers: [{ color: \"#f3d19c\" }] },\n      { featureType: \"transit\", elementType: \"geometry\", stylers: [{ color: \"#2f3948\" }] },\n      { featureType: \"transit.station\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"water\", elementType: \"geometry\", stylers: [{ color: \"#17263c\" }] },\n      { featureType: \"water\", elementType: \"labels.text.fill\", stylers: [{ color: \"#515c6d\" }] },\n      { featureType: \"water\", elementType: \"labels.text.stroke\", stylers: [{ color: \"#17263c\" }] },\n    ],\n};","import { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF, PolylineF } from '@react-google-maps/api';\r\nimport '../App.css';\r\nimport { FloatButton, Button, Tooltip, Modal, Upload, Input, message, Image } from 'antd';\r\nimport { useContext } from 'react';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { PlayCircleOutlined, StopOutlined, CompassOutlined, EyeOutlined, EyeInvisibleOutlined, PlusOutlined, ClearOutlined, DownloadOutlined, ShareAltOutlined } from '@ant-design/icons';\r\nimport html2canvas from 'html2canvas';\r\nimport Geocode from \"react-geocode\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport ImgCrop from 'antd-img-crop'\r\nimport TextArea from 'antd/es/input/TextArea';\r\nimport { darkMode } from './mapStyles';\r\nimport startMarker from '../picture/flaggreen.svg'\r\nimport stopMarker from '../picture/flagred.svg'\r\n\r\nexport default function Map() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [trackingEnabled, setTrackingEnabled] = useState(false); // State to track whether geolocation tracking is enabled\r\n  const [pathId, setPathId] = useState(0);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [currentPosition, setCurrentPositions] = useState({ lat: null, lng: null });\r\n  const [isPathsVisible, setIsPathsVisible] = useState(true);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n  const [mapZoom, setMapZoom] = useState(14);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [markerName, setMarkerName] = useState(1);\r\n  const [stopPosition, setStopPosition] = useState(null);\r\n  const [startPositionSet, setStartPositionSet] = useState(false);\r\n  const [flagVisible, setFlagVisible] = useState(true);\r\n\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n  const savedPathId = useRef(\"\");\r\n  const pathName = useRef(\"\");\r\n  const inputText = useRef(\"\");\r\n  const markerIcon = useRef(\"\");\r\n  const [pictureGroup, setPictureGroup] = useState([]);\r\n  const pictureGroupRef = useRef([]);\r\n  const [pictureDataGroup, setPictureDataGroup] = useState([]);\r\n\r\n\r\n  // State to store the user's avatarUrl\r\n  const markerIconDataUrl = useRef(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  const { addPath, displayedPath, setDisplayedPath } = useContext(SavedPathsContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n\r\n  const handleCancel = () => setPreviewOpen(false);\r\n\r\n  const customRequest = async ({ file, onSuccess, onError }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      // Change the URL to your backend endpoint that handles the icon upload\r\n      const response = await axios.post(`${apiUrl}/api/upload-icon`, formData);\r\n      if (response.data.code === '0') {\r\n        // Save the file URL or file ID returned by the backend in your state or user profile\r\n        console.log('Icon uploaded successfully:', response.data);\r\n        console.log(response.data.data)\r\n        markerIcon.current = response.data.data; // icon's objectID\r\n        console.log(markerIcon.current)\r\n        onSuccess();\r\n      } else {\r\n        onError(new Error('Failed to upload icon'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading icon:', error);\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  // 监听每一个marker的图片数组\r\n  useEffect(() => {\r\n    console.log(pictureGroup);\r\n\r\n  }, [pictureGroup]);\r\n\r\n  const customPictureRequest = async ({ file, onSuccess, onError }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      // Change the URL to your backend endpoint that handles the picture upload\r\n      const response = await axios.post(`${apiUrl}/api/upload-picture`, formData);\r\n      if (response.data.code === '0') {\r\n        // Save the file URL or file ID returned by the backend in your state or user profile\r\n        console.log('Picture uploaded successfully:', response.data);\r\n        console.log(response.data.data);\r\n        const pictureObjectID = response.data.data; // picture's objectID\r\n        setPictureGroup((prev) => {\r\n          const newPictureGroup = [...prev, pictureObjectID];\r\n          pictureGroupRef.current = newPictureGroup; // 更新引用\r\n          return newPictureGroup;\r\n        });\r\n\r\n        onSuccess();\r\n      } else {\r\n        onError(new Error('Failed to upload picture'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading picture:', error);\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const customPictureRequestForClickedMarker = async ({ file, onSuccess, onError, marker }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      const response = await axios.post(`${apiUrl}/api/upload-picture`, formData);\r\n      if (response.data.code === '0') {\r\n        console.log('Picture uploaded successfully:', response.data);\r\n        const pictureObjectID = response.data.data; // picture's objectID\r\n        // Add the objectID to the marker's picture array\r\n        marker.picture = [...marker.picture, pictureObjectID];\r\n\r\n        // Then update the marker in the markers array\r\n        setMarkers(markers.map(m => m === marker ? marker : m));\r\n\r\n        // Then update the marker in the database\r\n        await axios.post(`${apiUrl}/api/update-marker`, marker);\r\n\r\n        onSuccess();\r\n      } else {\r\n        onError(new Error('Failed to upload picture'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading picture:', error);\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewOpen(true);\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\r\n\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} upload failed.`);\r\n    }\r\n  };\r\n\r\n\r\n  function getLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          resolve({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          maximumAge: 0,\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  async function getAvgLocation(pathId) {\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: firstLat, longitude: firstLng } = await getLocation();\r\n    console.log({ firstLat, firstLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: secondLat, longitude: secondLng } = await getLocation();\r\n    console.log({ secondLat, secondLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: thirdLat, longitude: thirdLng } = await getLocation();\r\n    console.log({ thirdLat, thirdLng });\r\n\r\n    const position = {\r\n      latitude: (firstLat + secondLat + thirdLat) / 3.0,\r\n      longitude: (firstLng + secondLng + thirdLng) / 3.0\r\n    }\r\n\r\n    setPositions((prev) => [...prev, { lat: position.latitude, lng: position.longitude, type: \"default\", pathId }]);\r\n    setCurrentPositions({ lat: position.latitude, lng: position.longitude });\r\n\r\n    console.log(position);\r\n    setEndTime(new Date()); // Save the end time\r\n  }\r\n\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          // Set the default map center to the user's current location\r\n          setMapCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error retrieving geolocation:\", error);\r\n          // If can't get the user's current location, the set to a default location\r\n          setMapCenter({ lat: 40.7128, lng: -74.0060 }); // Anywhere can be changed later\r\n        }\r\n      );\r\n    } else {\r\n      // If the web browser doesn't support geolocation, also set a default center\r\n      setMapCenter({ lat: 40.7128, lng: -74.0060 });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (displayedPath && displayedPath.length > 0) {\r\n      // If there is a path to display, set the center point of the map to the first point of the displayed path\r\n      setMapCenter(displayedPath[0]);\r\n      setMapZoom(15);\r\n    } else if (positions.length > 0) {\r\n      // If there is no path to display, but is under tracking, set the center point of the map as the last tracked point\r\n      setMapCenter(positions[positions.length - 1]);\r\n    }\r\n    // If the geolocation cannot be obtained or there is no path being tracked, keep the center point unchanged\r\n  }, [displayedPath, positions]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    if (trackingEnabled) {\r\n      setStartTime(new Date()); // Save the start time\r\n      // Immediately get the current location\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setPositions((prev) => [...prev, { lat: latitude, lng: longitude, type: \"default\", pathId }]);\r\n          setCurrentPositions({ lat: latitude, lng: longitude });\r\n          console.log(\"Got first location after click the button\");\r\n          if (!startPositionSet) {\r\n            setStartPositionSet(true);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error retrieving geolocation:', error);\r\n        }\r\n      );\r\n\r\n      // Start tracking location every 10 seconds\r\n      interval = setInterval(async () => {\r\n        console.log(\"Start Marking\");\r\n        await getAvgLocation(pathId);\r\n        console.log(\"Get a location\");\r\n        console.log(pathId);\r\n\r\n      }, 8000);\r\n    }\r\n\r\n    // Cleanup function to clear interval when component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [trackingEnabled, pathId]);\r\n\r\n  const handleStartTracking = () => {\r\n    setPositions([]); // clear positions before a new tracking\r\n    setStopPosition(null);\r\n    setStartPositionSet(false);\r\n    setMarkers([]);\r\n    setTrackingEnabled(true);\r\n    setPathId(prevPathId => prevPathId + 1); // 使用回调函数更新 pathId\r\n    console.log(\"Start tracking\");\r\n  };\r\n\r\n\r\n  //TODO\r\n  const handleAddPoint = () => {\r\n    const { lat, lng } = currentPosition;\r\n\r\n    Modal.confirm({\r\n      title: 'Set a New Marker',\r\n      content: (\r\n        <div>\r\n          Choose an unique icon:\r\n          <ImgCrop\r\n            rotationSlider={true}\r\n            zoomSlider={true}\r\n            quality={1}\r\n            cropShape='round'\r\n          >\r\n\r\n            <Upload\r\n              customRequest={customRequest}\r\n              listType=\"picture-circle\"\r\n              onPreview={handlePreview}\r\n              onChange={handleChange}\r\n\r\n            >\r\n              {uploadButton}\r\n\r\n            </Upload>\r\n\r\n          </ImgCrop>\r\n\r\n          Type something at this moment:\r\n\r\n          <TextArea\r\n            showCount\r\n            maxLength={200}\r\n            style={{ heght: 250, marginBottom: 24 }}\r\n            placeholder=\"It is memorable that ...\"\r\n            onChange={(e) => inputText.current = e.target.value}\r\n          />\r\n\r\n          Pictures:\r\n          <ImgCrop>\r\n            <Upload\r\n              listType=\"picture-card\"\r\n              customRequest={customPictureRequest}\r\n              onPreiew={handlePreview}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n            </Upload>\r\n          </ImgCrop>\r\n\r\n        </div>\r\n      ),\r\n      onOk: (close) => {\r\n        axios.get(`${apiUrl}/api/icon/${markerIcon.current}`)\r\n          .then((response) => {\r\n            if (response.data.code === '0') {\r\n              console.log(response.data.data);\r\n              const imageBase64 = response.data.data;\r\n              // Set the userAvatarUrl state with the fetched avatar data\r\n              markerIconDataUrl.current = `data:image/png;base64,${imageBase64}`;\r\n              console.log(markerIconDataUrl.current)\r\n\r\n              const customMarkerIcon = {\r\n                url: markerIconDataUrl.current, // your base64 data url\r\n                scaledSize: new google.maps.Size(64, 64) // the size you want to scale to\r\n              };\r\n\r\n\r\n              console.log(\"现在\" + pictureGroupRef.current)\r\n              const newMarker = {\r\n                markerLat: lat,\r\n                markerLng: lng,\r\n                type: \"custom\",\r\n                markerID: Date.now(), // Assign a unique ID to the marker\r\n                name: markerName,\r\n                text: inputText.current,\r\n                url: customMarkerIcon, // Only for display, will not stored in database\r\n                icon: markerIcon.current,\r\n                pathID: \"\",\r\n                picture: pictureGroupRef.current\r\n              };\r\n\r\n              console.log(newMarker);\r\n\r\n              setMarkers((prev) => [...prev, newMarker]);\r\n              setMarkerName(markerName + 1);\r\n              console.log(\"Add an information point\");\r\n\r\n            } else {\r\n              console.log(\"Icon not found\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching icon data:', error);\r\n          });\r\n\r\n\r\n        close();\r\n      },\r\n    });\r\n\r\n    // 清空图片集\r\n    setPictureGroup([]);\r\n    pictureGroupRef.current = [];\r\n  };\r\n\r\n  Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\r\n\r\n  const handleStopTracking = () => {\r\n    setTrackingEnabled(false);\r\n    setStopPosition(currentPosition);\r\n    console.log(\"Stop tracking\");\r\n\r\n    const duration = (endTime - startTime) / 1000; // Calculate the duration in seconds\r\n    if (duration < 10) {\r\n      setStopPosition(null);\r\n      Modal.warning({\r\n        centered: true,\r\n        title: 'Warning',\r\n        content: 'The path is less than 10 seconds long and will not be saved.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    Modal.confirm({\r\n      centered: true,\r\n      title: 'Do you want to save this path?',\r\n      content: (\r\n        <div>\r\n          <p>Enter a name for the path:</p>\r\n          <Input\r\n            onChange={(e) => {\r\n              pathName.current = e.target.value;\r\n            }}\r\n            placeholder=\"Path name\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk: () => {\r\n        console.log(pathName);\r\n        const startCoordinates = positions[0];\r\n        const endCoordinates = positions[positions.length - 1];\r\n        // Get the user info stored in sessionStorage\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        // 使用逆地理编码服务获取开始点的地址\r\n        Geocode.fromLatLng(startCoordinates.lat, startCoordinates.lng)\r\n          .then((response) => {\r\n            const startAddress = response.results[0].formatted_address;\r\n\r\n            // 使用逆地理编码服务获取结束点的地址\r\n            Geocode.fromLatLng(endCoordinates.lat, endCoordinates.lng)\r\n              .then((response) => {\r\n                const endAddress = response.results[0].formatted_address;\r\n\r\n                const pathData = {\r\n                  path: positions,\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  duration: duration,\r\n                  startAddress: startAddress,\r\n                  endAddress: endAddress,\r\n                  userid: user.id,\r\n                  name: pathName.current,\r\n                };\r\n\r\n                console.log(\"PathData\", pathData);\r\n\r\n                //send pathData to back end\r\n                axios.post(`${apiUrl}/api/path-data`, pathData)\r\n                  .then(response => {\r\n                    // Check the response code\r\n                    if (response.data.code === '0') {\r\n                      console.log('Path data successfully sent to the backend:', response.data);\r\n                    }\r\n                    // Get pathId from back end\r\n                    console.log(\"path ID is: \" + response.data.data);\r\n                    savedPathId.current = response.data.data;\r\n\r\n                    const updatedMarkers = markers.map(item => ({ ...item, pathID: response.data.data }))\r\n\r\n                    // send markerData to back end\r\n                    updatedMarkers.forEach(marker => {\r\n                      console.log(marker)\r\n                      axios.post(`${apiUrl}/api/marker-data`, marker)\r\n                        .then(response => {\r\n                          if (response.data.code === '0') {\r\n                            console.log('Marker data successfully sent to backend:', response.data);\r\n                          }\r\n                        })\r\n                        .catch(error => {\r\n                          console.log('Error sending marker data to the backend:', error);\r\n                        });\r\n                    })\r\n\r\n\r\n                    // Generate the screenshot\r\n                    const mapContainer = document.querySelector('.map-container');\r\n                    const screenshotBlob = html2canvas(mapContainer, {\r\n                      useCORS: true,\r\n                      allowTaint: true,\r\n                    }).then((canvas) => {\r\n                      // Convert the canvas to a blob\r\n                      canvas.toBlob((blob) => {\r\n                        // Create a File object from the blob\r\n                        const screenshotFile = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n\r\n                        // Continue with your code to upload the screenshot\r\n                        const formData = new FormData();\r\n                        formData.append('screenshot', screenshotFile);\r\n\r\n                        axios.post(`${apiUrl}/api/${savedPathId.current}/upload-screenshot`, formData)\r\n                          .then(response => {\r\n                            if (response.data.code === '0') {\r\n                              console.log('Screenshot uploaded successfully:', response.data);\r\n                            } else {\r\n                              console.log('Screenshot uploaded failed:');\r\n                            }\r\n                          })\r\n                          .catch(error => {\r\n                            console.error('Error uploading Screenshot:', error);\r\n                          });\r\n                      }, 'image/png');\r\n                    });\r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.error('Error sending path data to the backend:', error);\r\n                  });\r\n                //save pathData at front end\r\n                addPath(pathData);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error geocoding end coordinates:\", error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error geocoding start coordinates:\", error);\r\n          });\r\n      },\r\n      // No action on cancel, as we just close the modal\r\n    });\r\n  };\r\n\r\n\r\n  // TODO\r\n  const handleMarkerClick = (marker) => {\r\n    console.log(\"marker text is:\" + marker.text);\r\n\r\n    // 预先加载图片数据\r\n    const promises = marker.picture.map(pictureID => {\r\n      return axios.get(`${apiUrl}/api/picture/${pictureID}`)\r\n        .then((response) => {\r\n          if (response.data.code === '0') {\r\n            return response.data.data;\r\n          } else {\r\n            console.log(\"Picture not found\");\r\n            return null;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching picture data:', error);\r\n          return null;\r\n        });\r\n    });\r\n\r\n    // 等待所有图片数据加载完成后再打开 Modal\r\n    Promise.all(promises)\r\n      .then((imageBase64Array) => {\r\n        // 过滤掉加载失败的图片数据\r\n        const filteredImageBase64Array = imageBase64Array.filter(imageBase64 => imageBase64 !== null);\r\n        setPictureDataGroup(filteredImageBase64Array);\r\n        // 打开 Modal\r\n        openModal(marker, filteredImageBase64Array);\r\n      });\r\n  };\r\n\r\n\r\n  const MarkerModalContent = ({\r\n    marker,\r\n    pictureDataGroup,\r\n    trackingEnabled,\r\n    onSaveText, }) => {\r\n    const [localText, setLocalText] = useState(marker.text); // 使用局部状态保存文本\r\n    return (\r\n      <div>\r\n        {trackingEnabled ?\r\n          (<div>\r\n            Comment:\r\n            <br></br>\r\n            {marker.text}\r\n          </div>\r\n          ) :\r\n          (\r\n            <div>\r\n              Do you want to add something new?\r\n              <TextArea\r\n                showCount\r\n                maxLength={200}\r\n                style={{ height: 250, marginBottom: 24 }}\r\n                placeholder=\"Input something...\"\r\n                value={localText} // 使用局部状态作为文本区的值\r\n                onChange={(e) => {\r\n                  setLocalText(e.target.value);\r\n                  onSaveText && onSaveText(e.target.value); // 当文本改变时调用onSaveText\r\n                }}\r\n              // defaultValue={marker.text}\r\n              // onChange={(e) => inputText.current = e.target.value}\r\n              />\r\n            </div>\r\n          )}\r\n        <br></br>\r\n        Pictures:\r\n        <div>\r\n          <Image.PreviewGroup\r\n            preview={{\r\n              onChange: (current, prev) => console.log(`current index: ${current}, prev index: ${prev}`),\r\n            }}\r\n          >\r\n            {pictureDataGroup.map((pictureData, index) => (\r\n              <Image key={index} width={100} src={`data:image/png;base64,${pictureData}`} />\r\n            ))}\r\n          </Image.PreviewGroup>\r\n        </div>\r\n\r\n        {!trackingEnabled &&\r\n          <ImgCrop>\r\n            <Upload\r\n              customRequest={(params) => customPictureRequestForClickedMarker({ ...params, marker })}\r\n              listType=\"picture-card\"\r\n              onPreview={handlePreview}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n            </Upload>\r\n          </ImgCrop>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const openModal = (marker, imageBase64Array) => {\r\n    let newText = marker.text; // 用来保存模态框中更改的文本\r\n    Modal.confirm({\r\n      title: 'The marker you left in this place',\r\n      content: <MarkerModalContent\r\n        key={new Date().getTime()} // 强制更新\r\n        marker={marker}\r\n        pictureDataGroup={imageBase64Array}\r\n        // inputText={marker.text}\r\n        onSaveText={(text) => newText = text} // 将文本保存到newText变量中\r\n        trackingEnabled={trackingEnabled} // 确保您传递了trackingEnabled\r\n      // ... 其他props ...\r\n      />,\r\n      onOk: (close) => {\r\n        if (trackingEnabled) {\r\n          close();\r\n          return; // 如果在路径记录状态，直接返回，不执行后续代码\r\n        }\r\n        const updatedMarker = {\r\n          ...marker, // 获取原始marker的所有属性\r\n          text: newText // 更新 text 属性\r\n          //TODO\r\n        };\r\n\r\n        // 更新数据库\r\n        axios.post(`${apiUrl}/api/update-marker`, updatedMarker)\r\n          .then(response => {\r\n            if (response.data.code === '0') {\r\n              console.log(\"Marker updated successfully in database\");\r\n\r\n              // 更新前端的 state\r\n              setMarkers(markers.map(m => m.markerID === marker.markerID ? updatedMarker : m));\r\n            } else {\r\n              console.log(\"Error updating marker in database:\", response.data.message);\r\n            }\r\n            close();\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error sending request to update marker:\", error);\r\n            close();\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n\r\n  // Group positions by pathId\r\n  const positionByPathId = positions.reduce((acc, position) => {\r\n    (acc[position.pathId] = acc[position.pathId] || []).push(position);\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleClearPaths = () => {\r\n    // setClearedPaths(positions);\r\n    setPositions([]);\r\n    setMarkers([]);\r\n    setMarkerName(1);\r\n    setStartPositionSet(false);\r\n    setStopPosition();\r\n    setPathId(0);\r\n    setDisplayedPath([]);\r\n  }\r\n\r\n  const togglePathsVisibility = () => {\r\n    setIsPathsVisible(!isPathsVisible);\r\n    setFlagVisible(!flagVisible);\r\n  };\r\n\r\n\r\n\r\n  const handleScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const link = document.createElement('a');\r\n      link.href = canvas.toDataURL('image/png');\r\n      link.download = 'screenshot.png';\r\n      link.click();\r\n\r\n      setIsTakingScreenshot(false);\r\n    });\r\n  };\r\n\r\n  const handleShareScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const blob = canvas.toBlob((blob) => {\r\n        if (blob) {\r\n          const file = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n\r\n          if (navigator.share) {\r\n            // Share the screenshot using the Web Share API\r\n            navigator.share({\r\n              files: [file],\r\n            });\r\n          } else {\r\n            console.error('Web Share API not supported.');\r\n          }\r\n        } else {\r\n          console.error('Failed to generate screenshot blob.');\r\n        }\r\n\r\n        setIsTakingScreenshot(false);\r\n      });\r\n    });\r\n  };\r\n\r\n  if (!isLoaded) return <div>Loading..</div>\r\n\r\n  return (\r\n    /*global google*/\r\n    <div className=\"map-view\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          mapContainerClassName=\"map-container\"\r\n          options={{\r\n            fullscreenControl: false,\r\n            streetViewControl: false,\r\n            ...theme === 'default' ? {} : darkMode,\r\n          }}\r\n        >\r\n          {isPathsVisible && Object.values(positionByPathId).map((pathPositions, index) => (\r\n            <PolylineF\r\n              key={index}\r\n              path={pathPositions}\r\n              options={{\r\n                strokeColor: '#0000FF',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {displayedPath && isPathsVisible && ( // Display the saved path\r\n            <PolylineF\r\n              path={displayedPath}\r\n              options={{\r\n                strokeColor: '#FF0000',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {markers.map(marker => (\r\n            <MarkerF\r\n              key={marker.markerID}\r\n              position={{ lat: marker.markerLat, lng: marker.markerLng }}\r\n              visible={marker.type === 'custom'}\r\n              icon={marker.url}\r\n\r\n              onClick={() => handleMarkerClick(marker)}\r\n            />\r\n          ))}\r\n\r\n          {flagVisible && startPositionSet && (\r\n            <MarkerF\r\n              position={positions[0]}\r\n              icon={{\r\n                url: startMarker,\r\n                scaledSize: new window.google.maps.Size(32, 32), // Adjust the size as needed\r\n                anchor: new window.google.maps.Point(1,32)\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {flagVisible && stopPosition && (\r\n            <MarkerF\r\n              position={stopPosition}\r\n              icon={{\r\n                url: stopMarker,\r\n                scaledSize: new window.google.maps.Size(32, 32), // Adjust the size as needed\r\n                anchor: new window.google.maps.Point(1,32)\r\n              }}\r\n            />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        {/* Main start/stop button */}\r\n        <div className='map-view-start-stop-button'>\r\n          {trackingEnabled ? (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStopTracking}\r\n              icon={<StopOutlined />}\r\n              style={{ backgroundColor: 'OrangeRed' }}\r\n            >\r\n              STOP\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStartTracking}\r\n              icon={<PlayCircleOutlined />}\r\n              style={{ backgroundColor: 'LimeGreen' }}\r\n            >\r\n              START\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text location information and back to top button*/}\r\n        <FloatButton.Group shape=\"circle\" style={{ left: 24 }}>\r\n          <Tooltip\r\n            title={\r\n              <div>\r\n                <h1>Your current location:</h1>\r\n                <p>Latitude: {currentPosition.lat} </p>\r\n                <p>Longitude: {currentPosition.lng}</p>\r\n              </div>\r\n            }\r\n            placement='right'\r\n            color='#87d068'\r\n          >\r\n            <FloatButton\r\n              icon={<CompassOutlined />}\r\n            />\r\n          </Tooltip>\r\n\r\n          <FloatButton.BackTop visibilityHeight={0} />\r\n        </FloatButton.Group>\r\n\r\n\r\n        {/* Functional buttons group */}\r\n        <FloatButton.Group shape=\"circle\" style={{ right: 50, top: '60%', transform: 'translateY(-50%)' }}>\r\n          {isPathsVisible ? (\r\n            <FloatButton\r\n              icon={<EyeInvisibleOutlined />}\r\n              tooltip='Hide Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          ) : (\r\n            <FloatButton\r\n              icon={<EyeOutlined />}\r\n              tooltip='Show Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          )}\r\n\r\n          <FloatButton\r\n            icon={<PlusOutlined />}\r\n            tooltip='Add a Point'\r\n            onClick={handleAddPoint}\r\n            disabled={!trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ClearOutlined />}\r\n            tooltip='Clear'\r\n            onClick={handleClearPaths}\r\n            disabled={trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<DownloadOutlined />}\r\n            tooltip=\"Take Screenshot\"\r\n            onClick={handleScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ShareAltOutlined />}\r\n            tooltip=\"Share\"\r\n            onClick={handleShareScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n        </FloatButton.Group>\r\n\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}"],"names":["darkMode","fullscreenControl","streetViewControl","styles","elementType","stylers","color","featureType","Map","_useState","useState","_useState2","_slicedToArray","positions","setPositions","_useState3","_useState4","trackingEnabled","setTrackingEnabled","_useState5","_useState6","pathId","setPathId","_useState7","_useState8","markers","setMarkers","_useState9","lat","lng","_useState10","currentPosition","setCurrentPositions","_useState11","_useState12","isPathsVisible","setIsPathsVisible","_useState13","_useState14","mapCenter","setMapCenter","_useState15","_useState16","mapZoom","setMapZoom","_useState17","_useState18","startTime","setStartTime","_useState19","_useState20","endTime","setEndTime","_useState21","_useState22","markerName","setMarkerName","_useState23","_useState24","stopPosition","setStopPosition","_useState25","_useState26","startPositionSet","setStartPositionSet","_useState27","_useState28","flagVisible","setFlagVisible","apiUrl","process","savedPathId","useRef","pathName","inputText","markerIcon","_useState29","_useState30","pictureGroup","setPictureGroup","pictureGroupRef","_useState31","_useState32","setPictureDataGroup","markerIconDataUrl","_useState33","_useState34","loading","_useState35","_useState36","imageUrl","_useContext","useContext","SavedPathsContext","addPath","displayedPath","setDisplayedPath","theme","ThemeContext","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_useState37","_useState38","setPreviewOpen","_useState39","_useState40","setPreviewImage","customRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","onSuccess","onError","formData","response","wrap","_context","prev","next","FormData","append","axios","post","concat","sent","data","code","console","log","current","Error","t0","stop","_x","apply","arguments","useEffect","customPictureRequest","_ref4","_callee2","_ref3","pictureObjectID","_context2","newPictureGroup","_toConsumableArray","_x2","customPictureRequestForClickedMarker","_ref6","_callee3","_ref5","marker","_context3","picture","map","m","_x3","handlePreview","_ref7","_callee4","_context4","url","preview","originFileObj","_x4","isLoaded","useLoadScript","googleMapsApiKey","_useState41","_useState42","isTakingScreenshot","setIsTakingScreenshot","uploadButton","_jsxs","children","_jsx","LoadingOutlined","PlusOutlined","style","marginTop","handleChange","info","status","message","success","name","getLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","enableHighAccuracy","maximumAge","getAvgLocation","_x5","_getAvgLocation","_callee8","_yield$getLocation","firstLat","firstLng","_yield$getLocation2","secondLat","secondLng","_yield$getLocation3","thirdLat","thirdLng","_context8","setTimeout","type","Date","length","interval","_position$coords2","setInterval","_callee5","_context5","clearInterval","Geocode","setApiKey","MarkerModalContent","_ref9","pictureDataGroup","onSaveText","_useState43","text","_useState44","localText","setLocalText","TextArea","showCount","maxLength","height","marginBottom","placeholder","value","onChange","e","target","Image","PreviewGroup","pictureData","index","width","src","ImgCrop","Upload","params","_objectSpread","listType","onPreview","alt","openModal","imageBase64Array","newText","Modal","confirm","title","content","getTime","onOk","close","updatedMarker","then","markerID","catch","positionByPathId","reduce","acc","push","togglePathsVisibility","handleScreenshot","_ref10","_callee6","mapContainer","_context6","document","querySelector","html2canvas","useCORS","allowTaint","canvas","link","createElement","href","toDataURL","download","click","handleShareScreenshot","_ref11","_callee7","_context7","toBlob","blob","File","share","files","className","GoogleMap","center","zoom","mapContainerClassName","options","Object","values","pathPositions","PolylineF","path","strokeColor","strokeOpacity","strokeWeight","MarkerF","markerLat","markerLng","visible","icon","onClick","promises","pictureID","get","all","filteredImageBase64Array","filter","imageBase64","handleMarkerClick","startMarker","scaledSize","window","google","maps","Size","anchor","Point","stopMarker","Button","shape","size","duration","warning","centered","Input","startCoordinates","endCoordinates","user","JSON","parse","sessionStorage","getItem","fromLatLng","startAddress","results","formatted_address","endAddress","pathData","userid","id","item","pathID","forEach","screenshotFile","StopOutlined","backgroundColor","prevPathId","PlayCircleOutlined","FloatButton","Group","left","Tooltip","placement","CompassOutlined","BackTop","visibilityHeight","right","top","transform","EyeInvisibleOutlined","tooltip","EyeOutlined","rotationSlider","zoomSlider","quality","cropShape","heght","onPreiew","customMarkerIcon","newMarker","now","disabled","ClearOutlined","DownloadOutlined","ShareAltOutlined"],"sourceRoot":""}