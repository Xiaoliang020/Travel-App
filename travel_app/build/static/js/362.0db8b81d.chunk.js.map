{"version":3,"file":"static/js/362.0db8b81d.chunk.js","mappings":"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","sources":["picture/flaggreen.svg","picture/flagred.svg","views/Share.js"],"sourcesContent":["var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFlaggreen(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"1em\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"svg{fill:#00ff00}\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlaggreen);\nexport default __webpack_public_path__ + \"static/media/flaggreen.0d04a2a14a4cda256aa08ab3061b4a28.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFlagred(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"1em\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"svg{fill:#ff0000}\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32V64 368 480c0 17.7 14.3 32 32 32s32-14.3 32-32V352l64.3-16.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L64 48V32z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlagred);\nexport default __webpack_public_path__ + \"static/media/flagred.7ce369b6a269d5ef47359565b2ded2dc.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, useRef } from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF, PolylineF } from '@react-google-maps/api';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Modal, Image } from 'antd';\r\nimport axios from 'axios';\r\nimport '../assets/styles/share.css';\r\nimport startMarker from '../picture/flaggreen.svg'\r\nimport stopMarker from '../picture/flagred.svg'\r\n\r\nconst SharedPage = () => {\r\n  const { pathId } = useParams();\r\n  const [path, setPath] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [mapZoom, setMapZoom] = useState(15);\r\n  const [isMarkersReady, setIsMarkersReady] = useState(false);\r\n\r\n  const markerText = useRef(\"\");\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n  useEffect(() => {\r\n    axios.get(`${apiUrl}/api/share/${pathId}`)\r\n      .then(response => {\r\n        setPath(response.data.data);\r\n        console.log(\"Successfully retrive shared path:\", response.data.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error retrieving shared path:', error);\r\n      });\r\n    // get markers binded with the path\r\n    axios.get(`${apiUrl}/api/share/marker/${pathId}`)\r\n      .then(response => {\r\n        console.log(response.data.data);\r\n        const markersData = response.data.data;\r\n        Promise.all(markersData.map(marker => {\r\n          return axios.get(`${apiUrl}/api/icon/${marker.icon}`)\r\n            .then(response => {\r\n              // ... (existing code to handle marker icon response)\r\n              if (response.data.code === '0') {\r\n                console.log('Marker data get successfully', response.data);\r\n                const imageBase64 = response.data.data;\r\n                const imageUrl = `data:image/png;base64,${imageBase64}`;\r\n                const customMarkerIcon = {\r\n                  url: imageUrl,\r\n                  scaledSize: new window.google.maps.Size(64, 64)\r\n                };\r\n                marker.url = customMarkerIcon;\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log('Error getting marker icon from the backend:', error);\r\n            });\r\n        })).then(() => {\r\n          setMarkers(markersData);\r\n          setIsMarkersReady(true);; // Markers and icons are now ready\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.error('Error retrieving shared markers:', error);\r\n      });\r\n  }, [pathId]);\r\n\r\n  // TODO\r\n  const handleMarkerClick = (marker) => {\r\n    console.log(\"marker text is:\" + marker.text);\r\n    markerText.current = marker.text;\r\n\r\n    // 预先加载图片数据\r\n    const promises = marker.picture.map(pictureID => {\r\n      return axios.get(`${apiUrl}/api/picture/${pictureID}`)\r\n        .then((response) => {\r\n          if (response.data.code === '0') {\r\n            return response.data.data;\r\n          } else {\r\n            console.log(\"Picture not found\");\r\n            return null;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching picture data:', error);\r\n          return null;\r\n        });\r\n    });\r\n\r\n    // 等待所有图片数据加载完成后再打开 Modal\r\n    Promise.all(promises)\r\n      .then((imageBase64Array) => {\r\n        // 过滤掉加载失败的图片数据\r\n        const filteredImageBase64Array = imageBase64Array.filter(imageBase64 => imageBase64 !== null);\r\n        // 打开 Modal\r\n        openModal(marker, filteredImageBase64Array);\r\n      });\r\n  };\r\n\r\n  const MarkerModalContent = ({\r\n    marker,\r\n    pictureDataGroup,\r\n    inputText,\r\n  }) => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          Text: {markerText.current}\r\n        </div>\r\n        <br></br>\r\n        Pictures:\r\n        <div>\r\n          <Image.PreviewGroup\r\n            preview={{\r\n              onChange: (current, prev) => console.log(`current index: ${current}, prev index: ${prev}`),\r\n            }}\r\n          >\r\n            {pictureDataGroup.map((pictureData, index) => (\r\n              <Image key={index} width={100} src={`data:image/png;base64,${pictureData}`} />\r\n            ))}\r\n          </Image.PreviewGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const openModal = (marker, imageBase64Array) => {\r\n    Modal.confirm({\r\n      title: 'The marker you left in this place',\r\n      content: <MarkerModalContent\r\n        key={new Date().getTime()} // 强制更新\r\n        marker={marker}\r\n        pictureDataGroup={imageBase64Array}\r\n      />,\r\n      onOk: (close) => {\r\n        close()\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  if (!path || !isMarkersReady || !isLoaded) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const mapCenter = {\r\n    lat: path.path[0].lat,\r\n    lng: path.path[0].lng,\r\n  };\r\n\r\n  const pathArray = path.path;\r\n\r\n  const startPosition = pathArray[0];\r\n  const stopPosition = pathArray[pathArray.length - 1];\r\n\r\n  if (!isLoaded) return <div>Loading..</div>\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <div className=\"path-info\">\r\n        <h1>Path Name: {path.name}</h1>\r\n        <p>Start Address: {path.startAddress}</p>\r\n        <p>End Address: {path.endAddress}</p>\r\n        <p>Start Time: {path.startTime}</p>\r\n        <p>End Time: {path.endTime}</p>\r\n      </div>\r\n      <div className=\"map-container\">\r\n        {isMarkersReady && isLoaded && ( // Check if markers are ready and Google Map is loaded\r\n          <GoogleMap\r\n            center={mapCenter}\r\n            zoom={mapZoom}\r\n            mapContainerClassName=\"map-container\"\r\n          >\r\n            <PolylineF\r\n              path={pathArray}\r\n              options={{\r\n                strokeColor: '#5900FF',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n\r\n            {markers.map(marker => (\r\n              <MarkerF\r\n                key={marker.id} // Assuming there's a unique id for each marker\r\n                position={{ lat: marker.markerLat, lng: marker.markerLng }}\r\n                icon={marker.url}\r\n                onClick={() => handleMarkerClick(marker)}\r\n              />\r\n            ))}\r\n\r\n            <MarkerF\r\n              position={startPosition}\r\n              icon={{\r\n                url: startMarker,\r\n                scaledSize: new window.google.maps.Size(32, 32), // Adjust the size as needed\r\n              }}\r\n            />\r\n\r\n            <MarkerF\r\n              position={stopPosition}\r\n              icon={{\r\n                url: stopMarker,\r\n                scaledSize: new window.google.maps.Size(32, 32), // Adjust the size as needed\r\n              }}\r\n            />\r\n          </GoogleMap>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SharedPage;\r\n"],"names":["pathId","useParams","_useState","useState","_useState2","_slicedToArray","path","setPath","_useState3","_useState4","markers","setMarkers","_useState5","_useState6","mapZoom","_useState7","_useState8","isMarkersReady","setIsMarkersReady","markerText","useRef","isLoaded","useLoadScript","googleMapsApiKey","process","apiUrl","useEffect","axios","get","concat","then","response","data","console","log","catch","error","markersData","Promise","all","map","marker","icon","code","imageBase64","customMarkerIcon","url","scaledSize","window","google","maps","Size","MarkerModalContent","_ref","pictureDataGroup","inputText","_jsxs","children","current","_jsx","Image","PreviewGroup","preview","onChange","prev","pictureData","index","width","src","openModal","imageBase64Array","Modal","confirm","title","content","Date","getTime","onOk","close","mapCenter","lat","lng","pathArray","startPosition","stopPosition","length","className","name","startAddress","endAddress","startTime","endTime","GoogleMap","center","zoom","mapContainerClassName","PolylineF","options","strokeColor","strokeOpacity","strokeWeight","MarkerF","position","markerLat","markerLng","onClick","text","promises","picture","pictureID","filteredImageBase64Array","filter","handleMarkerClick","id","startMarker","stopMarker"],"sourceRoot":""}