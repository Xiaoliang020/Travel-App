{"version":3,"file":"static/js/445.d315306f.chunk.js","mappings":"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","sources":["views/Map.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF, PolylineF } from '@react-google-maps/api';\r\nimport '../App.css';\r\nimport { FloatButton, Button, Tooltip, Modal } from 'antd';\r\nimport { useContext } from 'react';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { PlayCircleOutlined, StopOutlined, CompassOutlined, EyeOutlined, EyeInvisibleOutlined, PlusOutlined, ClearOutlined, DownloadOutlined, ShareAltOutlined } from '@ant-design/icons';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nexport default function Map() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [trackingEnabled, setTrackingEnabled] = useState(false); // State to track whether geolocation tracking is enabled\r\n  const [pathId, setPathId] = useState(0);\r\n  // const [clearedPaths, setClearedPaths] = useState([]); // State to store cleared paths, probably needed for future features\r\n  const [currentPosition, setCurrentPositions] = useState({ lat: null, lng: null });\r\n  const [isPathsVisible, setIsPathsVisible] = useState(true);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n  const [mapZoom, setMapZoom] = useState(14);\r\n\r\n  const { addPath, displayedPath, setDisplayedPath } = useContext(SavedPathsContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const mapId = theme === 'default' ? '17e23ad9dc98cd76' : '965d3fbc319fcf57';\r\n\r\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\r\n  \r\n  const darkMode = {\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    styles: [\r\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n      { featureType: \"administrative.locality\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"poi\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"poi.park\", elementType: \"geometry\", stylers: [{ color: \"#263c3f\" }] },\r\n      { featureType: \"poi.park\", elementType: \"labels.text.fill\", stylers: [{ color: \"#6b9a76\" }] },\r\n      { featureType: \"road\", elementType: \"geometry\", stylers: [{ color: \"#38414e\" }] },\r\n      { featureType: \"road\", elementType: \"geometry.stroke\", stylers: [{ color: \"#212a37\" }] },\r\n      { featureType: \"road\", elementType: \"labels.text.fill\", stylers: [{ color: \"#9ca5b3\" }] },\r\n      { featureType: \"road.highway\", elementType: \"geometry\", stylers: [{ color: \"#746855\" }] },\r\n      { featureType: \"road.highway\", elementType: \"geometry.stroke\", stylers: [{ color: \"#1f2835\" }] },\r\n      { featureType: \"road.highway\", elementType: \"labels.text.fill\", stylers: [{ color: \"#f3d19c\" }] },\r\n      { featureType: \"transit\", elementType: \"geometry\", stylers: [{ color: \"#2f3948\" }] },\r\n      { featureType: \"transit.station\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\r\n      { featureType: \"water\", elementType: \"geometry\", stylers: [{ color: \"#17263c\" }] },\r\n      { featureType: \"water\", elementType: \"labels.text.fill\", stylers: [{ color: \"#515c6d\" }] },\r\n      { featureType: \"water\", elementType: \"labels.text.stroke\", stylers: [{ color: \"#17263c\" }] },\r\n    ],\r\n  };\r\n\r\n\r\n\r\n  function getLocation (){\r\n    return new Promise((resolve,reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          resolve({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  async function getAvgLocation(pathId){\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function(){\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: firstLat, longitude: firstLng } = await getLocation();\r\n    console.log({ firstLat, firstLng });\r\n  \r\n    await new Promise((resolve) => {\r\n      setTimeout(function(){\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: secondLat, longitude: secondLng } = await getLocation();\r\n    console.log({ secondLat, secondLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function(){\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n  \r\n    const { latitude: thirdLat, longitude: thirdLng } = await getLocation();\r\n    console.log({ thirdLat, thirdLng });\r\n\r\n    const position = {\r\n      latitude: (firstLat + secondLat + thirdLat)/3.0 , \r\n      longitude: (firstLng + secondLng + thirdLng)/3.0\r\n    }\r\n\r\n    setPositions((prev) => [...prev, { lat: position.latitude, lng: position.longitude, type: \"default\", pathId }]);\r\n    setCurrentPositions({ lat: position.latitude, lng: position.longitude });\r\n\r\n    console.log(position);\r\n\r\n  }\r\n\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          // Set the default map center to the user's current location\r\n          setMapCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error retrieving geolocation:\", error);\r\n          // If can't get the user's current location, the set to a default location\r\n          setMapCenter({ lat: 40.7128, lng: -74.0060 }); // Anywhere can be changed later\r\n        }\r\n      );\r\n    } else {\r\n      // If the web browser doesn't support geolocation, also set a default center\r\n      setMapCenter({ lat: 40.7128, lng: -74.0060 });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (displayedPath && displayedPath.length > 0) {\r\n      // If there is a path to display, set the center point of the map to the first point of the displayed path\r\n      setMapCenter(displayedPath[0]);\r\n      setMapZoom(15);\r\n    } else if (positions.length > 0) {\r\n      // If there is no path to display, but is under tracking, set the center point of the map as the last tracked point\r\n      setMapCenter(positions[positions.length - 1]);\r\n    }\r\n    // If the geolocation cannot be obtained or there is no path being tracked, keep the center point unchanged\r\n  }, [displayedPath, positions]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    if (trackingEnabled) {\r\n      // Immediately get the current location\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setPositions((prev) => [...prev, { lat: latitude, lng: longitude, type: \"default\", pathId }]);\r\n          setCurrentPositions({ lat: latitude, lng: longitude });\r\n          console.log(\"Got first location after click the button\");\r\n        },\r\n        (error) => {\r\n          console.error('Error retrieving geolocation:', error);\r\n        }\r\n      );\r\n\r\n      // Start tracking location every 10 seconds\r\n      interval = setInterval(async () => {\r\n        console.log(\"Start Marking\");\r\n        await getAvgLocation(pathId);\r\n        console.log(\"Get a location\");\r\n        console.log(pathId);\r\n\r\n      }, 8000);\r\n    }\r\n\r\n    // Cleanup function to clear interval when component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [trackingEnabled, pathId]);\r\n\r\n  const handleStartTracking = () => {\r\n    setPositions([]); // clear positions before a new tracking\r\n    setTrackingEnabled(true);\r\n    setPathId(pathId + 1);\r\n    console.log(\"Start tracking\");\r\n  };\r\n\r\n  const handleStopTracking = () => {\r\n    setTrackingEnabled(false);\r\n    console.log(\"Stop tracking\");\r\n\r\n    Modal.confirm({\r\n      centered: true,\r\n      title: 'Do you want to save this path?',\r\n      onOk: () => {\r\n        addPath(positions);\r\n      },\r\n      // No action on cancel, as we just close the modal\r\n    });\r\n  };\r\n\r\n\r\n  // Group positions by pathId\r\n  const positionByPathId = positions.reduce((acc, position) => {\r\n    (acc[position.pathId] = acc[position.pathId] || []).push(position);\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleClearPaths = () => {\r\n    // setClearedPaths(positions);\r\n    setPositions([]);\r\n    setPathId(0);\r\n    setDisplayedPath([]);\r\n  }\r\n\r\n  const togglePathsVisibility = () => {\r\n    setIsPathsVisible(!isPathsVisible);\r\n  };\r\n\r\n  const handleAddPoint = () => {\r\n    const { lat, lng } = currentPosition;\r\n    const newMarker = {\r\n      lat,\r\n      lng,\r\n      type: \"custom\",\r\n      id: Date.now(), // Assign a unique ID to the marker\r\n    };\r\n\r\n    setPositions((prevPositions) => [...prevPositions, newMarker]);\r\n    console.log(\"Add an information point\");\r\n  };\r\n\r\n  const handleScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const link = document.createElement('a');\r\n      link.href = canvas.toDataURL('image/png');\r\n      link.download = 'screenshot.png';\r\n      link.click();\r\n\r\n      setIsTakingScreenshot(false);\r\n    });\r\n  };\r\n\r\n  const handleShareScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n  \r\n    const mapContainer = document.querySelector('.map-container');\r\n  \r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const blob = canvas.toBlob((blob) => {\r\n        if (blob) {\r\n          const file = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n  \r\n          if (navigator.share) {\r\n            // Share the screenshot using the Web Share API\r\n            navigator.share({\r\n              files: [file],\r\n            });\r\n          } else {\r\n            console.error('Web Share API not supported.');\r\n          }\r\n        } else {\r\n          console.error('Failed to generate screenshot blob.');\r\n        }\r\n  \r\n        setIsTakingScreenshot(false);\r\n      });\r\n    });\r\n  };\r\n  \r\n\r\n  if (!isLoaded) return <div>Loading..</div>\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          mapContainerClassName=\"map-container\"\r\n          // Problem: Cannot show the map's detail in the screenshot when enable mapId\r\n          // options={{\r\n          //   mapId: mapId,\r\n          //   fullscreenControl: false, // 添加这一行来隐藏全屏控件\r\n          //   streetViewControl: false,\r\n          // }}\r\n          options={{\r\n            fullscreenControl: false,\r\n            streetViewControl: false,\r\n            ...theme === 'default' ? {} : darkMode,\r\n          }}\r\n        >\r\n          {isPathsVisible && Object.values(positionByPathId).map((pathPositions, index) => (\r\n            <PolylineF\r\n              key={index}\r\n              path={pathPositions}\r\n              options={{\r\n                strokeColor: '#0000FF',\r\n                // strokeColor: parseInt(pathId) % 2 === 0 ? '#0000FF' : '#00FF00',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {displayedPath && isPathsVisible && ( // Display the saved path\r\n            <PolylineF\r\n              path={displayedPath}\r\n              options={{\r\n                strokeColor: '#FF0000',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {positions.map((position, index) => (\r\n            <MarkerF\r\n              key={index}\r\n              position={position}\r\n              visible = {position.type === 'custom'}\r\n              icon={position.type === 'custom' ? {\r\n                url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/info-i_maps.png'\r\n              } : null}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n\r\n        {/* Main start/stop button */}\r\n        <div className='map-view-start-stop-button'>\r\n          {trackingEnabled ? (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStopTracking}\r\n              icon={<StopOutlined />}\r\n              style={{ backgroundColor: 'OrangeRed' }}\r\n            >\r\n              STOP\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStartTracking}\r\n              icon={<PlayCircleOutlined />}\r\n              style={{ backgroundColor: 'LimeGreen' }}\r\n            >\r\n              START\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text location information and back to top button*/}\r\n        <FloatButton.Group shape=\"circle\" style={{ left: 24 }}>\r\n          <Tooltip\r\n            title={\r\n              <div>\r\n                <h1>Your current location:</h1>\r\n                <p>Latitude: {currentPosition.lat} </p>\r\n                <p>Longitude: {currentPosition.lng}</p>\r\n              </div>\r\n            }\r\n            placement='right'\r\n            color='#87d068'\r\n          >\r\n            <FloatButton\r\n              icon={<CompassOutlined />}\r\n            />\r\n          </Tooltip>\r\n\r\n          <FloatButton.BackTop visibilityHeight={0} />\r\n        </FloatButton.Group>\r\n\r\n\r\n        {/* Functional buttons group */}\r\n        <FloatButton.Group shape=\"circle\" style={{ right: 50, top: '60%', transform: 'translateY(-50%)' }}>\r\n          {isPathsVisible ? (\r\n            <FloatButton\r\n              icon={<EyeInvisibleOutlined />}\r\n              tooltip='Hide Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          ) : (\r\n            <FloatButton\r\n              icon={<EyeOutlined />}\r\n              tooltip='Show Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          )}\r\n\r\n          <FloatButton\r\n            icon={<PlusOutlined />}\r\n            tooltip='Add a Point'\r\n            onClick={handleAddPoint}\r\n            disabled={!trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ClearOutlined />}\r\n            tooltip='Clear'\r\n            onClick={handleClearPaths}\r\n            disabled={trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<DownloadOutlined />}\r\n            tooltip=\"Take Screenshot\"\r\n            onClick={handleScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ShareAltOutlined />}\r\n            tooltip=\"Share\"\r\n            onClick={handleShareScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n        </FloatButton.Group>\r\n\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}"],"names":["Map","_useState","useState","_useState2","_slicedToArray","positions","setPositions","_useState3","_useState4","trackingEnabled","setTrackingEnabled","_useState5","_useState6","pathId","setPathId","_useState7","lat","lng","_useState8","currentPosition","setCurrentPositions","_useState9","_useState10","isPathsVisible","setIsPathsVisible","_useState11","_useState12","mapCenter","setMapCenter","_useState13","_useState14","mapZoom","setMapZoom","_useContext","useContext","SavedPathsContext","addPath","displayedPath","setDisplayedPath","theme","ThemeContext","isLoaded","useLoadScript","googleMapsApiKey","process","_useState15","_useState16","isTakingScreenshot","setIsTakingScreenshot","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","error","getAvgLocation","_x","_getAvgLocation","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","_yield$getLocation","firstLat","firstLng","_yield$getLocation2","secondLat","secondLng","_yield$getLocation3","thirdLat","thirdLng","wrap","_context4","prev","next","setTimeout","sent","console","log","concat","_toConsumableArray","type","stop","useEffect","length","interval","_position$coords2","setInterval","_callee","_context","clearInterval","positionByPathId","reduce","acc","push","togglePathsVisibility","handleScreenshot","_ref2","_callee2","mapContainer","_context2","document","querySelector","html2canvas","useCORS","allowTaint","then","canvas","link","createElement","href","toDataURL","download","click","handleShareScreenshot","_ref3","_callee3","_context3","toBlob","blob","file","File","share","files","_jsx","className","children","_jsxs","GoogleMap","center","zoom","mapContainerClassName","options","_objectSpread","fullscreenControl","streetViewControl","styles","elementType","stylers","color","featureType","Object","values","map","pathPositions","index","PolylineF","path","strokeColor","strokeOpacity","strokeWeight","MarkerF","visible","icon","url","Button","shape","size","onClick","Modal","confirm","centered","title","onOk","StopOutlined","style","backgroundColor","PlayCircleOutlined","FloatButton","Group","left","Tooltip","placement","CompassOutlined","BackTop","visibilityHeight","right","top","transform","EyeInvisibleOutlined","tooltip","EyeOutlined","PlusOutlined","newMarker","id","Date","now","prevPositions","disabled","ClearOutlined","DownloadOutlined","ShareAltOutlined"],"sourceRoot":""}