{"version":3,"file":"static/js/941.9be9f7e1.chunk.js","mappings":"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","sources":["views/mapStyles.js","views/Map.js"],"sourcesContent":["export const darkMode = {\n    fullscreenControl: false,\n    streetViewControl: false,\n    styles: [\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\n      { featureType: \"administrative.locality\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"poi\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"poi.park\", elementType: \"geometry\", stylers: [{ color: \"#263c3f\" }] },\n      { featureType: \"poi.park\", elementType: \"labels.text.fill\", stylers: [{ color: \"#6b9a76\" }] },\n      { featureType: \"road\", elementType: \"geometry\", stylers: [{ color: \"#38414e\" }] },\n      { featureType: \"road\", elementType: \"geometry.stroke\", stylers: [{ color: \"#212a37\" }] },\n      { featureType: \"road\", elementType: \"labels.text.fill\", stylers: [{ color: \"#9ca5b3\" }] },\n      { featureType: \"road.highway\", elementType: \"geometry\", stylers: [{ color: \"#746855\" }] },\n      { featureType: \"road.highway\", elementType: \"geometry.stroke\", stylers: [{ color: \"#1f2835\" }] },\n      { featureType: \"road.highway\", elementType: \"labels.text.fill\", stylers: [{ color: \"#f3d19c\" }] },\n      { featureType: \"transit\", elementType: \"geometry\", stylers: [{ color: \"#2f3948\" }] },\n      { featureType: \"transit.station\", elementType: \"labels.text.fill\", stylers: [{ color: \"#d59563\" }] },\n      { featureType: \"water\", elementType: \"geometry\", stylers: [{ color: \"#17263c\" }] },\n      { featureType: \"water\", elementType: \"labels.text.fill\", stylers: [{ color: \"#515c6d\" }] },\n      { featureType: \"water\", elementType: \"labels.text.stroke\", stylers: [{ color: \"#17263c\" }] },\n    ],\n};","import { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF, PolylineF } from '@react-google-maps/api';\r\nimport '../App.css';\r\nimport { FloatButton, Button, Tooltip, Modal, Upload, Input, message} from 'antd';\r\nimport { useContext } from 'react';\r\nimport SavedPathsContext from '../SavedPathsContext';\r\nimport { ThemeContext } from '../App';\r\nimport { PlayCircleOutlined, StopOutlined, CompassOutlined, EyeOutlined, EyeInvisibleOutlined, PlusOutlined, ClearOutlined, DownloadOutlined, ShareAltOutlined } from '@ant-design/icons';\r\nimport html2canvas from 'html2canvas';\r\nimport Geocode from \"react-geocode\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport myImg from '../picture/1.jpg';\r\nimport myImg2 from '../picture/2.jpg';\r\nimport ImgCrop from 'antd-img-crop'\r\nimport TextArea from 'antd/es/input/TextArea';\r\nimport {darkMode} from './mapStyles';\r\n\r\nexport default function Map() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [trackingEnabled, setTrackingEnabled] = useState(false); // State to track whether geolocation tracking is enabled\r\n  const [pathId, setPathId] = useState(0);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [currentPosition, setCurrentPositions] = useState({ lat: null, lng: null });\r\n  const [isPathsVisible, setIsPathsVisible] = useState(true);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n  const [mapZoom, setMapZoom] = useState(14);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [markerName, setMarkerName] = useState(1);\r\n  const [pathNameProvided, setPathNameProvided] = useState(true);\r\n\r\n  const pathName = useRef(\"\");\r\n  const inputText = useRef(\"\");\r\n  const [markerIcon, setMarkerIcon] = useState(1);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  const { addPath, displayedPath, setDisplayedPath } = useContext(SavedPathsContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  const handleCancel = () => setPreviewOpen(false);\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewOpen(true);\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\r\n\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  const handleChange = ({ file, fileList: newFileList }) => {\r\n    if (file.status === 'uploading') {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      setImageUrl(URL.createObjectURL(file.originFileObj));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  function getLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          resolve({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  async function getAvgLocation(pathId) {\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: firstLat, longitude: firstLng } = await getLocation();\r\n    console.log({ firstLat, firstLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: secondLat, longitude: secondLng } = await getLocation();\r\n    console.log({ secondLat, secondLng });\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    const { latitude: thirdLat, longitude: thirdLng } = await getLocation();\r\n    console.log({ thirdLat, thirdLng });\r\n\r\n    const position = {\r\n      latitude: (firstLat + secondLat + thirdLat) / 3.0,\r\n      longitude: (firstLng + secondLng + thirdLng) / 3.0\r\n    }\r\n\r\n    setPositions((prev) => [...prev, { lat: position.latitude, lng: position.longitude, type: \"default\", pathId }]);\r\n    setCurrentPositions({ lat: position.latitude, lng: position.longitude });\r\n\r\n    console.log(position);\r\n    setEndTime(new Date()); // Save the end time\r\n  }\r\n\r\n\r\n  // Get the user's current location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          // Set the default map center to the user's current location\r\n          setMapCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error retrieving geolocation:\", error);\r\n          // If can't get the user's current location, the set to a default location\r\n          setMapCenter({ lat: 40.7128, lng: -74.0060 }); // Anywhere can be changed later\r\n        }\r\n      );\r\n    } else {\r\n      // If the web browser doesn't support geolocation, also set a default center\r\n      setMapCenter({ lat: 40.7128, lng: -74.0060 });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (displayedPath && displayedPath.length > 0) {\r\n      // If there is a path to display, set the center point of the map to the first point of the displayed path\r\n      setMapCenter(displayedPath[0]);\r\n      setMapZoom(15);\r\n    } else if (positions.length > 0) {\r\n      // If there is no path to display, but is under tracking, set the center point of the map as the last tracked point\r\n      setMapCenter(positions[positions.length - 1]);\r\n    }\r\n    // If the geolocation cannot be obtained or there is no path being tracked, keep the center point unchanged\r\n  }, [displayedPath, positions]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    if (trackingEnabled) {\r\n      setStartTime(new Date()); // Save the start time\r\n      // Immediately get the current location\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setPositions((prev) => [...prev, { lat: latitude, lng: longitude, type: \"default\", pathId }]);\r\n          setCurrentPositions({ lat: latitude, lng: longitude });\r\n          console.log(\"Got first location after click the button\");\r\n        },\r\n        (error) => {\r\n          console.error('Error retrieving geolocation:', error);\r\n        }\r\n      );\r\n\r\n      // Start tracking location every 10 seconds\r\n      interval = setInterval(async () => {\r\n        console.log(\"Start Marking\");\r\n        await getAvgLocation(pathId);\r\n        console.log(\"Get a location\");\r\n        console.log(pathId);\r\n\r\n      }, 8000);\r\n    }\r\n\r\n    // Cleanup function to clear interval when component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [trackingEnabled, pathId]);\r\n\r\n  const handleStartTracking = () => {\r\n    setPositions([]); // clear positions before a new tracking\r\n    setMarkers([]);\r\n    setTrackingEnabled(true);\r\n    setPathId(prevPathId => prevPathId + 1); // 使用回调函数更新 pathId\r\n    console.log(\"Start tracking\");\r\n  };\r\n\r\n  //TODO\r\n  const handleAddPoint = () => {\r\n    const { lat, lng } = currentPosition;\r\n\r\n    Modal.confirm({\r\n      title: 'Set a New Marker',\r\n      content: (\r\n        <div>\r\n          Marker icon:\r\n          <ImgCrop \r\n            rotationSlider = {true}\r\n            zoomSlider = {true}\r\n            quality = {1}\r\n            cropShape = 'round'\r\n          >\r\n\r\n            <Upload\r\n              listType=\"picture-circle\"\r\n              onPreview={handlePreview}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\r\n            </Upload>\r\n\r\n          </ImgCrop>\r\n\r\n          Comment:\r\n\r\n          <TextArea\r\n            showCount\r\n            maxLength = {200}\r\n            style = {{ heght: 250, marginBottom: 24}}\r\n            placeholder=\"Input something...\"\r\n            onChange={(e) => inputText.current = e.target.value}\r\n          />\r\n\r\n          Pictures:\r\n          <ImgCrop>\r\n            <Upload\r\n              listType = \"picture-card\"\r\n              onPreiew = {handlePreview}\r\n              onChange = {handleChange}\r\n            >\r\n              {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n            </Upload>\r\n          </ImgCrop>\r\n\r\n        </div>\r\n      ),\r\n      onOk: (close) => {\r\n\r\n        const newMarker = {\r\n          markerLat: lat,\r\n          markerLng: lng,\r\n          type: \"custom\",\r\n          markerID: Date.now(), // Assign a unique ID to the marker\r\n          name: markerName,\r\n          text: inputText.current,\r\n          icon: markerIcon === 1 ? myImg : myImg2,\r\n          pathID:\"\"\r\n        };\r\n\r\n        // console.log(\"inputText is:\" + inputText.current);\r\n        // console.log(\"marker Text is:\" + newMarker.text);\r\n        // console.log(\"marker ID is:\" + newMarker.id);\r\n        // console.log(\"marker lat is:\" + newMarker.lat);\r\n        console.log(newMarker);\r\n\r\n        setMarkers((prev) => [...prev, newMarker]);\r\n        setMarkerName(markerName + 1);\r\n        console.log(\"Add an information point\");\r\n\r\n        if (markerIcon === 1) {\r\n          setMarkerIcon(2);\r\n        } else {\r\n          setMarkerIcon(1);\r\n        }\r\n\r\n        close();\r\n      },\r\n    });\r\n  };\r\n\r\n  Geocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\r\n\r\n  const handleStopTracking = () => {\r\n    setTrackingEnabled(false);\r\n    console.log(\"Stop tracking\");\r\n\r\n    const duration = (endTime - startTime) / 1000; // Calculate the duration in seconds\r\n    if (duration < 10) {\r\n      Modal.warning({\r\n        centered: true,\r\n        title: 'Warning',\r\n        content: 'The path is less than 10 seconds long and will not be saved.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    Modal.confirm({\r\n      centered: true,\r\n      title: 'Do you want to save this path?',\r\n      content: (\r\n        <div>\r\n          <p>Enter a name for the path:</p>\r\n          <Input\r\n            onChange={(e) => {\r\n              pathName.current = e.target.value;\r\n            }}\r\n            placeholder=\"Path name\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk: () => {\r\n        console.log(pathName);\r\n        const startCoordinates = positions[0];\r\n        const endCoordinates = positions[positions.length - 1];\r\n        // Get the user info stored in sessionStorage\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        // 使用逆地理编码服务获取开始点的地址\r\n        Geocode.fromLatLng(startCoordinates.lat, startCoordinates.lng)\r\n          .then((response) => {\r\n            const startAddress = response.results[0].formatted_address;\r\n\r\n            // 使用逆地理编码服务获取结束点的地址\r\n            Geocode.fromLatLng(endCoordinates.lat, endCoordinates.lng)\r\n              .then((response) => {\r\n                const endAddress = response.results[0].formatted_address;\r\n\r\n                const pathData = {\r\n                  path: positions,\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  duration: duration,\r\n                  startAddress: startAddress,\r\n                  endAddress: endAddress,\r\n                  userid: user.id,\r\n                  name: pathName.current,\r\n                };\r\n\r\n                console.log(\"PathData\", pathData);\r\n\r\n                //send pathData to back end\r\n                axios.post('/api/path-data', pathData)\r\n                  .then(response => {\r\n                    // Check the response code\r\n                    if (response.data.code === '0') {\r\n                      console.log('Path data successfully sent to the backend:', response.data);\r\n                    }\r\n                    // Get pathId from back end\r\n                    console.log(response.data.data);\r\n                    const updatedMarkers = markers.map(item=>({...item, pathID: response.data.data}))\r\n\r\n                    // send markerData to back end\r\n                    updatedMarkers.forEach(marker=>{\r\n                      console.log(marker)\r\n                      axios.post('/api/marker-data', marker)\r\n                      .then(response => {\r\n                        if (response.data.code === '0') {\r\n                          console.log('Marker data successfully sent to backend:', response.data);\r\n                        }\r\n                      })\r\n                      .catch(error => {\r\n                        console.log('Error sending marker data to the backend:', error);\r\n                      });\r\n                    })\r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.error('Error sending path data to the backend:', error);\r\n                  });\r\n                //save pathData at front end\r\n                addPath(pathData);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"Error geocoding end coordinates:\", error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error geocoding start coordinates:\", error);\r\n          });\r\n      },\r\n      // No action on cancel, as we just close the modal\r\n    });\r\n  };\r\n\r\n  // TODO\r\n  const handleMarkerClick = (marker) => {\r\n    console.log(\"marker text is:\" + marker.text)\r\n    Modal.confirm({\r\n      title: 'The comment you left in this place',\r\n      content: (\r\n        <div>\r\n\r\n          <TextArea\r\n            showCount\r\n            maxLength = {200}\r\n            style = {{ heght: 250, marginBottom: 24}}\r\n            placeholder=\"Input something...\"\r\n            defaultValue = {marker.text}\r\n            onChange={(e) => inputText.current = e.target.value}\r\n          />\r\n          Pictures:\r\n          <ImgCrop>\r\n            <Upload\r\n              listType = \"picture-card\"\r\n              onPreiew = {handlePreview}\r\n              onChange = {handleChange}\r\n            >\r\n            </Upload>\r\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n          </ImgCrop>\r\n\r\n\r\n        </div>\r\n      ),\r\n      onOk: (close) => {\r\n\r\n        const newMarker = {\r\n          lat: marker.lat,\r\n          lng: marker.lng,\r\n          type: \"custom\",\r\n          id: marker.id, // Assign a unique ID to the marker\r\n          name: marker.name,\r\n          text: inputText.current,\r\n          icon: marker.icon\r\n        };\r\n\r\n\r\n\r\n        setMarkers(markers.map(m => m === marker ? newMarker : m))\r\n        close();\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  // Group positions by pathId\r\n  const positionByPathId = positions.reduce((acc, position) => {\r\n    (acc[position.pathId] = acc[position.pathId] || []).push(position);\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleClearPaths = () => {\r\n    // setClearedPaths(positions);\r\n    setPositions([]);\r\n    setMarkers([]);\r\n    setMarkerName(1);\r\n    setPathId(0);\r\n    setDisplayedPath([]);\r\n  }\r\n\r\n  const togglePathsVisibility = () => {\r\n    setIsPathsVisible(!isPathsVisible);\r\n  };\r\n\r\n  \r\n\r\n  const handleScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const link = document.createElement('a');\r\n      link.href = canvas.toDataURL('image/png');\r\n      link.download = 'screenshot.png';\r\n      link.click();\r\n\r\n      setIsTakingScreenshot(false);\r\n    });\r\n  };\r\n\r\n  const handleShareScreenshot = async () => {\r\n    setIsTakingScreenshot(true);\r\n\r\n    const mapContainer = document.querySelector('.map-container');\r\n\r\n    html2canvas(mapContainer, { useCORS: true, allowTaint: true }).then((canvas) => {\r\n      const blob = canvas.toBlob((blob) => {\r\n        if (blob) {\r\n          const file = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n\r\n          if (navigator.share) {\r\n            // Share the screenshot using the Web Share API\r\n            navigator.share({\r\n              files: [file],\r\n            });\r\n          } else {\r\n            console.error('Web Share API not supported.');\r\n          }\r\n        } else {\r\n          console.error('Failed to generate screenshot blob.');\r\n        }\r\n\r\n        setIsTakingScreenshot(false);\r\n      });\r\n    });\r\n  };\r\n\r\n  if (!isLoaded) return <div>Loading..</div>\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n          mapContainerClassName=\"map-container\"\r\n          options={{\r\n            fullscreenControl: false,\r\n            streetViewControl: false,\r\n            ...theme === 'default' ? {} : darkMode,\r\n          }}\r\n        >\r\n          {isPathsVisible && Object.values(positionByPathId).map((pathPositions, index) => (\r\n            <PolylineF\r\n              key={index}\r\n              path={pathPositions}\r\n              options={{\r\n                strokeColor: '#0000FF',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {displayedPath && isPathsVisible && ( // Display the saved path\r\n            <PolylineF\r\n              path={displayedPath}\r\n              options={{\r\n                strokeColor: '#FF0000',\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 5,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {markers.map((marker, index) => (\r\n            <MarkerF\r\n              key={marker}\r\n              position={{ lat: marker.markerLat, lng: marker.markerLng }}\r\n              visible={marker.type === 'custom'}\r\n              icon={marker.icon}\r\n              onClick={() => handleMarkerClick(marker)}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n\r\n        {/* Main start/stop button */}\r\n        <div className='map-view-start-stop-button'>\r\n          {trackingEnabled ? (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStopTracking}\r\n              icon={<StopOutlined />}\r\n              style={{ backgroundColor: 'OrangeRed' }}\r\n            >\r\n              STOP\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              onClick={handleStartTracking}\r\n              icon={<PlayCircleOutlined />}\r\n              style={{ backgroundColor: 'LimeGreen' }}\r\n            >\r\n              START\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text location information and back to top button*/}\r\n        <FloatButton.Group shape=\"circle\" style={{ left: 24 }}>\r\n          <Tooltip\r\n            title={\r\n              <div>\r\n                <h1>Your current location:</h1>\r\n                <p>Latitude: {currentPosition.lat} </p>\r\n                <p>Longitude: {currentPosition.lng}</p>\r\n              </div>\r\n            }\r\n            placement='right'\r\n            color='#87d068'\r\n          >\r\n            <FloatButton\r\n              icon={<CompassOutlined />}\r\n            />\r\n          </Tooltip>\r\n\r\n          <FloatButton.BackTop visibilityHeight={0} />\r\n        </FloatButton.Group>\r\n\r\n\r\n        {/* Functional buttons group */}\r\n        <FloatButton.Group shape=\"circle\" style={{ right: 50, top: '60%', transform: 'translateY(-50%)' }}>\r\n          {isPathsVisible ? (\r\n            <FloatButton\r\n              icon={<EyeInvisibleOutlined />}\r\n              tooltip='Hide Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          ) : (\r\n            <FloatButton\r\n              icon={<EyeOutlined />}\r\n              tooltip='Show Paths'\r\n              onClick={togglePathsVisibility}\r\n            />\r\n          )}\r\n\r\n          <FloatButton\r\n            icon={<PlusOutlined />}\r\n            tooltip='Add a Point'\r\n            onClick={handleAddPoint}\r\n            disabled={!trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ClearOutlined />}\r\n            tooltip='Clear'\r\n            onClick={handleClearPaths}\r\n            disabled={trackingEnabled}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<DownloadOutlined />}\r\n            tooltip=\"Take Screenshot\"\r\n            onClick={handleScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n\r\n          <FloatButton\r\n            icon={<ShareAltOutlined />}\r\n            tooltip=\"Share\"\r\n            onClick={handleShareScreenshot}\r\n            disabled={isTakingScreenshot}\r\n          />\r\n        </FloatButton.Group>\r\n\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}"],"names":["darkMode","fullscreenControl","streetViewControl","styles","elementType","stylers","color","featureType","Map","_useState","useState","_useState2","_slicedToArray","positions","setPositions","_useState3","_useState4","trackingEnabled","setTrackingEnabled","_useState5","_useState6","pathId","setPathId","_useState7","_useState8","markers","setMarkers","_useState9","lat","lng","_useState10","currentPosition","setCurrentPositions","_useState11","_useState12","isPathsVisible","setIsPathsVisible","_useState13","_useState14","mapCenter","setMapCenter","_useState15","_useState16","mapZoom","setMapZoom","_useState17","_useState18","startTime","setStartTime","_useState19","_useState20","endTime","setEndTime","_useState21","_useState22","markerName","setMarkerName","_useState23","_useState24","pathName","useRef","inputText","_useState25","_useState26","markerIcon","setMarkerIcon","_useState27","_useState28","loading","setLoading","_useState29","_useState30","imageUrl","setImageUrl","_useContext","useContext","SavedPathsContext","addPath","displayedPath","setDisplayedPath","theme","ThemeContext","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_useState31","_useState32","setPreviewOpen","_useState33","_useState34","setPreviewImage","_useState35","_useState36","_useState37","_useState38","handlePreview","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","url","preview","originFileObj","sent","stop","_x","apply","arguments","isLoaded","useLoadScript","googleMapsApiKey","process","_useState39","_useState40","isTakingScreenshot","setIsTakingScreenshot","uploadButton","_jsxs","children","_jsx","LoadingOutlined","PlusOutlined","style","marginTop","handleChange","_ref2","fileList","status","URL","createObjectURL","getLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","getAvgLocation","_x2","_getAvgLocation","_callee5","_yield$getLocation","firstLat","firstLng","_yield$getLocation2","secondLat","secondLng","_yield$getLocation3","thirdLat","thirdLng","_context5","setTimeout","console","log","concat","_toConsumableArray","type","Date","useEffect","length","interval","_position$coords2","setInterval","_callee2","_context2","clearInterval","Geocode","setApiKey","positionByPathId","reduce","acc","push","togglePathsVisibility","handleScreenshot","_ref4","_callee3","mapContainer","_context3","document","querySelector","html2canvas","useCORS","allowTaint","then","canvas","link","createElement","href","toDataURL","download","click","handleShareScreenshot","_ref5","_callee4","_context4","toBlob","blob","File","share","files","className","GoogleMap","center","zoom","mapContainerClassName","options","_objectSpread","Object","values","map","pathPositions","index","PolylineF","path","strokeColor","strokeOpacity","strokeWeight","marker","MarkerF","markerLat","markerLng","visible","icon","onClick","text","Modal","confirm","title","content","TextArea","showCount","maxLength","heght","marginBottom","placeholder","defaultValue","onChange","e","current","target","value","ImgCrop","Upload","listType","onPreiew","src","alt","width","onOk","close","newMarker","id","name","m","handleMarkerClick","Button","shape","size","duration","warning","centered","Input","startCoordinates","endCoordinates","user","JSON","parse","sessionStorage","getItem","fromLatLng","response","startAddress","results","formatted_address","endAddress","pathData","userid","axios","post","data","code","item","pathID","forEach","catch","StopOutlined","backgroundColor","prevPathId","PlayCircleOutlined","FloatButton","Group","left","Tooltip","placement","CompassOutlined","BackTop","visibilityHeight","right","top","transform","EyeInvisibleOutlined","tooltip","EyeOutlined","rotationSlider","zoomSlider","quality","cropShape","onPreview","markerID","now","myImg","myImg2","disabled","ClearOutlined","DownloadOutlined","ShareAltOutlined"],"sourceRoot":""}